{
  "collection": {
    "_": {
      "postman_id": "profiletasks-api-tests"
    },
    "item": [
      {
        "id": "7bfa4208-1867-4014-b6fb-504aab183342",
        "name": "Create ProfileTask",
        "request": {
          "url": {
            "path": [
              "profileTasks"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 201', function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test('ProfileTask created successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('id');",
                "    pm.expect(responseJson).to.have.property('guild_id');",
                "    pm.expect(responseJson).to.have.property('profile_id');",
                "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                "    pm.expect(responseJson).to.have.property('bot_dur');",
                "    pm.expect(responseJson).to.have.property('s_members');",
                "    pm.expect(responseJson).to.have.property('s_online');",
                "    pm.expect(responseJson).to.have.property('s_boosts');",
                "    pm.expect(responseJson).to.have.property('s_votes');",
                "    pm.expect(responseJson).to.have.property('s_chat');",
                "    pm.expect(responseJson).to.have.property('bd_shard');",
                "    pm.expect(responseJson).to.have.property('sm_shard');",
                "    pm.expect(responseJson).to.have.property('so_shard');",
                "    pm.expect(responseJson).to.have.property('sb_shard');",
                "    pm.expect(responseJson).to.have.property('sv_shard');",
                "    pm.expect(responseJson).to.have.property('si_shard');",
                "    ",
                "    // Store the created ProfileTask ID for later tests",
                "    pm.environment.set('profiletask_id', responseJson.id);",
                "});"
              ],
              "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
            }
          }
        ]
      },
      {
        "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
        "name": "Get All ProfileTasks",
        "request": {
          "url": {
            "path": [
              "profileTasks"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
            }
          }
        ]
      },
      {
        "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
        "name": "Get ProfileTask by ID",
        "request": {
          "url": {
            "path": [
              "profileTasks",
              "{{profiletask_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('ProfileTask retrieved successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('id');",
                "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                "});"
              ],
              "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
            }
          }
        ]
      },
      {
        "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
        "name": "Get ProfileTasks by Profile ID",
        "request": {
          "url": {
            "path": [
              "profileTasks",
              "profile",
              "{{profile_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "7b688c69-dea6-4572-be9a-339d97766672",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
            }
          }
        ]
      },
      {
        "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
        "name": "Get ProfileTasks by Guild ID",
        "request": {
          "url": {
            "path": [
              "profileTasks",
              "guild",
              "{{guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
            }
          }
        ]
      },
      {
        "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
        "name": "Update ProfileTask",
        "request": {
          "url": {
            "path": [
              "profileTasks",
              "{{profiletask_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2da158af-4128-41f1-b302-52d00a07be51",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('ProfileTask updated successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('id');",
                "    pm.expect(responseJson.bd_shard).to.equal(2);",
                "    pm.expect(responseJson.sm_shard).to.equal(2);",
                "});"
              ],
              "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
            }
          }
        ]
      },
      {
        "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
        "name": "Delete ProfileTask",
        "request": {
          "url": {
            "path": [
              "profileTasks",
              "{{profiletask_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200 or 204', function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                "});",
                "",
                "pm.test('ProfileTask deleted successfully', function () {",
                "    // Check if response has a success message or is empty",
                "    if (pm.response.code === 200) {",
                "        const responseJson = pm.response.json();",
                "        pm.expect(responseJson).to.have.property('message');",
                "    }",
                "});"
              ],
              "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
            }
          }
        ]
      },
      {
        "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
        "name": "Create ProfileTask with Invalid Data",
        "request": {
          "url": {
            "path": [
              "profileTasks"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "543c1105-a678-4cc7-b359-828ba289e228",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 400', function () {",
                "    pm.response.to.have.status(400);",
                "});",
                "",
                "pm.test('Error message present', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('error');",
                "});"
              ],
              "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
            }
          }
        ]
      },
      {
        "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
        "name": "Get Deleted ProfileTask (Should Fail)",
        "request": {
          "url": {
            "path": [
              "profileTasks",
              "{{profiletask_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 404', function () {",
                "    pm.response.to.have.status(404);",
                "});",
                "",
                "pm.test('Error message indicates ProfileTask not found', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('error');",
                "});"
              ],
              "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "profiletasks-api-tests",
      "name": "ProfileTasks API Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "Comprehensive tests for ProfileTasks API endpoints",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "profile-tasks-test-env",
    "name": "ProfileTasks Test Environment",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:3000/api/v1",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "tg_456",
        "key": "guild_id"
      },
      {
        "type": "any",
        "value": "tp_ch_789",
        "key": "profile_ch_id"
      },
      {
        "type": "any",
        "value": "tt_ch_101",
        "key": "tasks_ch_id"
      },
      {
        "type": "any",
        "value": "tp_123",
        "key": "profile_id"
      },
      {
        "type": "any",
        "value": "tbd_202",
        "key": "bot_dur"
      },
      {
        "type": "any",
        "value": "tsm_303",
        "key": "s_members"
      },
      {
        "type": "any",
        "value": "tso_404",
        "key": "s_online"
      },
      {
        "type": "any",
        "value": "tsb_505",
        "key": "s_boosts"
      },
      {
        "type": "any",
        "value": "tsv_606",
        "key": "s_votes"
      },
      {
        "type": "any",
        "value": "tsc_707",
        "key": "s_chat"
      },
      {
        "type": "any",
        "value": "upc_808",
        "key": "updated_profile_ch_id"
      },
      {
        "type": "any",
        "value": "utc_909",
        "key": "updated_tasks_ch_id"
      },
      {
        "type": "any",
        "value": "ubd_111",
        "key": "updated_bot_dur"
      },
      {
        "type": "any",
        "value": "usm_222",
        "key": "updated_s_members"
      },
      {
        "type": "any",
        "value": "uso_333",
        "key": "updated_s_online"
      },
      {
        "type": "any",
        "value": "usbs_444",
        "key": "updated_s_boosts"
      },
      {
        "type": "any",
        "value": "usvs_555",
        "key": "updated_s_votes"
      },
      {
        "type": "any",
        "value": "usc_666",
        "key": "updated_s_chat"
      },
      {
        "type": "any",
        "value": 1,
        "key": "profiletask_id"
      }
    ]
  },
  "globals": {
    "id": "5dcba605-bc53-4d12-9d03-16458211082f",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 18,
        "pending": 0,
        "failed": 8
      },
      "testScripts": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 222.33333333333334,
      "responseMin": 49,
      "responseMax": 455,
      "responseSd": 171.5245366315463,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1756217341299,
      "completed": 1756217344236
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 9,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1ca56c3d-2a3b-499f-a73d-4cb04c4c532a",
          "httpRequestId": "b1e94f45-8bc4-441c-8032-ebae60c589e8"
        },
        "item": {
          "id": "7bfa4208-1867-4014-b6fb-504aab183342",
          "name": "Create ProfileTask",
          "request": {
            "url": {
              "path": [
                "profileTasks"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('ProfileTask created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('profile_id');",
                  "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                  "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                  "    pm.expect(responseJson).to.have.property('bot_dur');",
                  "    pm.expect(responseJson).to.have.property('s_members');",
                  "    pm.expect(responseJson).to.have.property('s_online');",
                  "    pm.expect(responseJson).to.have.property('s_boosts');",
                  "    pm.expect(responseJson).to.have.property('s_votes');",
                  "    pm.expect(responseJson).to.have.property('s_chat');",
                  "    pm.expect(responseJson).to.have.property('bd_shard');",
                  "    pm.expect(responseJson).to.have.property('sm_shard');",
                  "    pm.expect(responseJson).to.have.property('so_shard');",
                  "    pm.expect(responseJson).to.have.property('sb_shard');",
                  "    pm.expect(responseJson).to.have.property('sv_shard');",
                  "    pm.expect(responseJson).to.have.property('si_shard');",
                  "    ",
                  "    // Store the created ProfileTask ID for later tests",
                  "    pm.environment.set('profiletask_id', responseJson.id);",
                  "});"
                ],
                "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3be0ec09-ca91-4323-a2c0-93e83797eb3f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "298",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"guild_id\":\"tg_456\",\"profile_ch_id\":\"tp_ch_789\",\"tasks_ch_id\":\"tt_ch_101\",\"profile_id\":\"tp_123\",\"bot_dur\":\"tbd_202\",\"s_members\":\"tsm_303\",\"s_online\":\"tso_404\",\"s_boosts\":\"tsb_505\",\"s_votes\":\"tsv_606\",\"s_chat\":\"tsc_707\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "d586916d-d151-4c30-8d1f-dd195273c47e",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:01.720Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:02 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              165,
              217,
              134,
              216,
              180,
              216,
              167,
              216,
              161,
              32,
              217,
              133,
              217,
              135,
              217,
              133,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              217,
              132,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              180,
              216,
              174,
              216,
              181,
              217,
              138,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              32,
              105,
              115,
              32,
              101,
              120,
              105,
              115,
              116,
              32,
              105,
              110,
              32,
              117,
              110,
              105,
              113,
              117,
              101,
              32,
              102,
              105,
              101,
              108,
              100,
              115,
              33,
              34,
              44,
              34,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              125,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 411,
          "responseSize": 196
        },
        "id": "7bfa4208-1867-4014-b6fb-504aab183342",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "ProfileTask created successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "ProfileTask created successfully",
              "message": "expected { success: true, …(2) } to have property 'id'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d5f6c100-4e27-4513-a494-6b71809603b2",
          "length": 9,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a0d159c6-728e-4ef5-8ac0-b8f87187d9dc"
        },
        "item": {
          "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
          "name": "Get All ProfileTasks",
          "request": {
            "url": {
              "path": [
                "profileTasks"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3ac92081-deba-4b77-9648-4ad2f41fee6c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e3bd044d-52ed-41ab-a0bc-3c26e1f04987",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:02.182Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:02 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              172,
              217,
              133,
              217,
              138,
              216,
              185,
              32,
              217,
              133,
              217,
              135,
              216,
              167,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              217,
              132,
              217,
              129,
              216,
              167,
              216,
              170,
              32,
              216,
              167,
              217,
              132,
              216,
              180,
              216,
              174,
              216,
              181,
              217,
              138,
              216,
              169,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              50,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              116,
              95,
              103,
              117,
              105,
              108,
              100,
              95,
              54,
              53,
              52,
              52,
              55,
              50,
              57,
              50,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              99,
              104,
              95,
              105,
              100,
              34,
              58,
              34,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              49,
              34,
              44,
              34,
              116,
              97,
              115,
              107,
              115,
              95,
              99,
              104,
              95,
              105,
              100,
              34,
              58,
              34,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              50,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              105,
              100,
              34,
              58,
              34,
              112,
              116,
              95,
              54,
              53,
              52,
              52,
              55,
              50,
              57,
              50,
              34,
              44,
              34,
              98,
              111,
              116,
              95,
              100,
              117,
              114,
              34,
              58,
              34,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              51,
              34,
              44,
              34,
              115,
              95,
              109,
              101,
              109,
              98,
              101,
              114,
              115,
              34,
              58,
              34,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              52,
              34,
              44,
              34,
              115,
              95,
              111,
              110,
              108,
              105,
              110,
              101,
              34,
              58,
              34,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              53,
              34,
              44,
              34,
              115,
              95,
              98,
              111,
              111,
              115,
              116,
              115,
              34,
              58,
              34,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              54,
              34,
              44,
              34,
              115,
              95,
              118,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              55,
              34,
              44,
              34,
              115,
              95,
              99,
              104,
              97,
              116,
              34,
              58,
              34,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              56,
              34,
              44,
              34,
              98,
              100,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              109,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              50,
              44,
              34,
              115,
              111,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              51,
              44,
              34,
              115,
              98,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              52,
              44,
              34,
              115,
              118,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              53,
              44,
              34,
              115,
              105,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              54,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              52,
              84,
              49,
              57,
              58,
              53,
              55,
              58,
              50,
              56,
              46,
              51,
              52,
              55,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              52,
              84,
              49,
              57,
              58,
              53,
              55,
              58,
              50,
              56,
              46,
              51,
              52,
              55,
              90,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              52,
              53,
              54,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              99,
              104,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              112,
              95,
              99,
              104,
              95,
              55,
              56,
              57,
              34,
              44,
              34,
              116,
              97,
              115,
              107,
              115,
              95,
              99,
              104,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              116,
              95,
              99,
              104,
              95,
              49,
              48,
              49,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              112,
              95,
              49,
              50,
              51,
              34,
              44,
              34,
              98,
              111,
              116,
              95,
              100,
              117,
              114,
              34,
              58,
              34,
              116,
              98,
              100,
              95,
              50,
              48,
              50,
              34,
              44,
              34,
              115,
              95,
              109,
              101,
              109,
              98,
              101,
              114,
              115,
              34,
              58,
              34,
              116,
              115,
              109,
              95,
              51,
              48,
              51,
              34,
              44,
              34,
              115,
              95,
              111,
              110,
              108,
              105,
              110,
              101,
              34,
              58,
              34,
              116,
              115,
              111,
              95,
              52,
              48,
              52,
              34,
              44,
              34,
              115,
              95,
              98,
              111,
              111,
              115,
              116,
              115,
              34,
              58,
              34,
              116,
              115,
              98,
              95,
              53,
              48,
              53,
              34,
              44,
              34,
              115,
              95,
              118,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              116,
              115,
              118,
              95,
              54,
              48,
              54,
              34,
              44,
              34,
              115,
              95,
              99,
              104,
              97,
              116,
              34,
              58,
              34,
              116,
              115,
              99,
              95,
              55,
              48,
              55,
              34,
              44,
              34,
              98,
              100,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              109,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              111,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              98,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              118,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              105,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              56,
              58,
              48,
              54,
              46,
              49,
              56,
              50,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              56,
              58,
              48,
              54,
              46,
              49,
              56,
              50,
              90,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 53,
          "responseSize": 1001
        },
        "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e9d89d3e-4abd-4610-8168-9cd22a3bae47",
          "length": 9,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7be108c9-98fb-4110-98e3-1a6e589ee436"
        },
        "item": {
          "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
          "name": "Get ProfileTask by ID",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "{{profiletask_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('ProfileTask retrieved successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                  "});"
                ],
                "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3f709de4-6bbf-4d33-bd80-b142f8dfdf88",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "be18c69d-a87c-464e-9fdd-a4ee1553ae6a",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:02.338Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:02 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              217,
              133,
              217,
              135,
              217,
              133,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              217,
              132,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              180,
              216,
              174,
              216,
              181,
              217,
              138,
              32,
              216,
              186,
              217,
              138,
              216,
              177,
              32,
              217,
              133,
              217,
              136,
              216,
              172,
              217,
              136,
              216,
              175,
              216,
              169,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 340,
          "responseSize": 81
        },
        "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:3)"
            }
          },
          {
            "assertion": "ProfileTask retrieved successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "ProfileTask retrieved successfully",
              "message": "expected { success: true, …(1) } to have property 'id'",
              "stack": "AssertionError: expected { success: true, …(1) } to have property 'id'\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b5c17469-db69-4ac0-b0a5-067a500b968e",
          "length": 9,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f670e319-bc67-4d30-b53f-f8d801e59b58"
        },
        "item": {
          "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
          "name": "Get ProfileTasks by Profile ID",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "profile",
                "{{profile_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7b688c69-dea6-4572-be9a-339d97766672",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks",
              "profile",
              "tp_123"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f71cb4ee-60c3-4961-82d1-da9aeb3f968a",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "3e05d44b-73c9-4e23-b710-789d00acb481",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:02.711Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:03 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              217,
              133,
              217,
              135,
              216,
              167,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              217,
              132,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              180,
              216,
              174,
              216,
              181,
              217,
              138,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              52,
              53,
              54,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              99,
              104,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              112,
              95,
              99,
              104,
              95,
              55,
              56,
              57,
              34,
              44,
              34,
              116,
              97,
              115,
              107,
              115,
              95,
              99,
              104,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              116,
              95,
              99,
              104,
              95,
              49,
              48,
              49,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              112,
              95,
              49,
              50,
              51,
              34,
              44,
              34,
              98,
              111,
              116,
              95,
              100,
              117,
              114,
              34,
              58,
              34,
              116,
              98,
              100,
              95,
              50,
              48,
              50,
              34,
              44,
              34,
              115,
              95,
              109,
              101,
              109,
              98,
              101,
              114,
              115,
              34,
              58,
              34,
              116,
              115,
              109,
              95,
              51,
              48,
              51,
              34,
              44,
              34,
              115,
              95,
              111,
              110,
              108,
              105,
              110,
              101,
              34,
              58,
              34,
              116,
              115,
              111,
              95,
              52,
              48,
              52,
              34,
              44,
              34,
              115,
              95,
              98,
              111,
              111,
              115,
              116,
              115,
              34,
              58,
              34,
              116,
              115,
              98,
              95,
              53,
              48,
              53,
              34,
              44,
              34,
              115,
              95,
              118,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              116,
              115,
              118,
              95,
              54,
              48,
              54,
              34,
              44,
              34,
              115,
              95,
              99,
              104,
              97,
              116,
              34,
              58,
              34,
              116,
              115,
              99,
              95,
              55,
              48,
              55,
              34,
              44,
              34,
              98,
              100,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              109,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              111,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              98,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              118,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              105,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              56,
              58,
              48,
              54,
              46,
              49,
              56,
              50,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              56,
              58,
              48,
              54,
              46,
              49,
              56,
              50,
              90,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 455,
          "responseSize": 486
        },
        "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "19232ea6-c916-435d-8c39-998c3f1ecba7",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b0635698-0720-4b62-933a-bdc582d6d9cb"
        },
        "item": {
          "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
          "name": "Get ProfileTasks by Guild ID",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "guild",
                "{{guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks",
              "guild",
              "tg_456"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f2690b0b-832a-446b-a839-4b7b3012637c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "534b1f22-ab02-41d2-adc6-cea9cb02f549",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:03.242Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:03 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              217,
              133,
              217,
              135,
              217,
              133,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              217,
              132,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              180,
              216,
              174,
              216,
              181,
              217,
              138,
              32,
              217,
              132,
              217,
              132,
              216,
              174,
              216,
              167,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              51,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              52,
              53,
              54,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              99,
              104,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              112,
              95,
              99,
              104,
              95,
              55,
              56,
              57,
              34,
              44,
              34,
              116,
              97,
              115,
              107,
              115,
              95,
              99,
              104,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              116,
              95,
              99,
              104,
              95,
              49,
              48,
              49,
              34,
              44,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              112,
              95,
              49,
              50,
              51,
              34,
              44,
              34,
              98,
              111,
              116,
              95,
              100,
              117,
              114,
              34,
              58,
              34,
              116,
              98,
              100,
              95,
              50,
              48,
              50,
              34,
              44,
              34,
              115,
              95,
              109,
              101,
              109,
              98,
              101,
              114,
              115,
              34,
              58,
              34,
              116,
              115,
              109,
              95,
              51,
              48,
              51,
              34,
              44,
              34,
              115,
              95,
              111,
              110,
              108,
              105,
              110,
              101,
              34,
              58,
              34,
              116,
              115,
              111,
              95,
              52,
              48,
              52,
              34,
              44,
              34,
              115,
              95,
              98,
              111,
              111,
              115,
              116,
              115,
              34,
              58,
              34,
              116,
              115,
              98,
              95,
              53,
              48,
              53,
              34,
              44,
              34,
              115,
              95,
              118,
              111,
              116,
              101,
              115,
              34,
              58,
              34,
              116,
              115,
              118,
              95,
              54,
              48,
              54,
              34,
              44,
              34,
              115,
              95,
              99,
              104,
              97,
              116,
              34,
              58,
              34,
              116,
              115,
              99,
              95,
              55,
              48,
              55,
              34,
              44,
              34,
              98,
              100,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              109,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              111,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              98,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              118,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              115,
              105,
              95,
              115,
              104,
              97,
              114,
              100,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              56,
              58,
              48,
              54,
              46,
              49,
              56,
              50,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              52,
              84,
              50,
              48,
              58,
              48,
              56,
              58,
              48,
              54,
              46,
              49,
              56,
              50,
              90,
              34,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 427,
          "responseSize": 497
        },
        "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "6ae15f19-5c1a-4846-9ff3-3e80adee642d",
          "length": 9,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5d63c5ca-f44a-452b-bef2-ac2a64734e22"
        },
        "item": {
          "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
          "name": "Update ProfileTask",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "{{profiletask_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2da158af-4128-41f1-b302-52d00a07be51",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('ProfileTask updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson.bd_shard).to.equal(2);",
                  "    pm.expect(responseJson.sm_shard).to.equal(2);",
                  "});"
                ],
                "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f6e6ddb8-e008-4250-967d-fb9358fecc9f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "254",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"profile_ch_id\":\"upc_808\",\"tasks_ch_id\":\"utc_909\",\"bot_dur\":\"ubd_111\",\"s_members\":\"usm_222\",\"s_online\":\"uso_333\",\"s_boosts\":\"usbs_444\",\"s_votes\":\"usvs_555\",\"s_chat\":\"usc_666\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c41e7621-1988-4d2f-a9d6-0489e3e6ea77",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:03.740Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:03 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              170,
              216,
              173,
              216,
              175,
              217,
              138,
              216,
              171,
              32,
              217,
              133,
              217,
              135,
              217,
              133,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              217,
              132,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              180,
              216,
              174,
              216,
              181,
              217,
              138,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              82,
              111,
              119,
              115,
              34,
              58,
              49,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 54,
          "responseSize": 122
        },
        "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "ProfileTask updated successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "ProfileTask updated successfully",
              "message": "expected { success: true, …(2) } to have property 'id'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a8d50448-f876-4eeb-9a0f-860b5732a589",
          "length": 9,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "38a4e8bb-7e22-4d6b-857c-c0d6d0ca84a4"
        },
        "item": {
          "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
          "name": "Delete ProfileTask",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "{{profiletask_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200 or 204', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                  "});",
                  "",
                  "pm.test('ProfileTask deleted successfully', function () {",
                  "    // Check if response has a success message or is empty",
                  "    if (pm.response.code === 200) {",
                  "        const responseJson = pm.response.json();",
                  "        pm.expect(responseJson).to.have.property('message');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "607aab40-d28a-4347-be40-c07b1e377d4b",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "af0710d3-3378-4f8d-8032-f6c954782302",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:03.850Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:03 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              173,
              216,
              176,
              217,
              129,
              32,
              217,
              133,
              217,
              135,
              217,
              133,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              217,
              132,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              180,
              216,
              174,
              216,
              181,
              217,
              138,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 55,
          "responseSize": 84
        },
        "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
        "assertions": [
          {
            "assertion": "Status code is 200 or 204",
            "skipped": false
          },
          {
            "assertion": "ProfileTask deleted successfully",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b015a5f1-2119-4dec-bc8f-85ca23ee9650",
          "length": 9,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8a34f933-5377-44da-b1ee-c799abc3b758"
        },
        "item": {
          "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
          "name": "Create ProfileTask with Invalid Data",
          "request": {
            "url": {
              "path": [
                "profileTasks"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "543c1105-a678-4cc7-b359-828ba289e228",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message present', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('error');",
                  "});"
                ],
                "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6087329e-c702-4aee-9894-730247865d4c",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "112",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "e7235208-3143-414a-84e6-394aead9cd4c",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:03.944Z"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "3331"
            },
            {
              "key": "ETag",
              "value": "W/\"d03-aOdDRP3nBqXi+4RVESZBik1hKVA\""
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:03 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              92,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              99,
              104,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              116,
              97,
              115,
              107,
              115,
              95,
              99,
              104,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              98,
              111,
              116,
              95,
              100,
              117,
              114,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              115,
              95,
              109,
              101,
              109,
              98,
              101,
              114,
              115,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              95,
              111,
              110,
              108,
              105,
              110,
              101,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              95,
              98,
              111,
              111,
              115,
              116,
              115,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              95,
              118,
              111,
              116,
              101,
              115,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              95,
              99,
              104,
              97,
              116,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              98,
              100,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              109,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              111,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              98,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              118,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              105,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              95,
              102,
              105,
              101,
              108,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              34,
              44,
              34,
              115,
              116,
              97,
              99,
              107,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              58,
              32,
              92,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              99,
              104,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              116,
              97,
              115,
              107,
              115,
              95,
              99,
              104,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              98,
              111,
              116,
              95,
              100,
              117,
              114,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              115,
              95,
              109,
              101,
              109,
              98,
              101,
              114,
              115,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              95,
              111,
              110,
              108,
              105,
              110,
              101,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              95,
              98,
              111,
              111,
              115,
              116,
              115,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              95,
              118,
              111,
              116,
              101,
              115,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              95,
              99,
              104,
              97,
              116,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              98,
              100,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              109,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              111,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              98,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              118,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              115,
              105,
              95,
              115,
              104,
              97,
              114,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              114,
              101,
              113,
              117,
              105,
              114,
              101,
              100,
              44,
              32,
              92,
              34,
              105,
              110,
              118,
              97,
              108,
              105,
              100,
              95,
              102,
              105,
              101,
              108,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              77,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              32,
              40,
              102,
              105,
              108,
              101,
              58,
              47,
              47,
              47,
              67,
              58,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              109,
              111,
              104,
              97,
              109,
              47,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              47,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              47,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              47,
              115,
              114,
              99,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              115,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              46,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              46,
              106,
              115,
              58,
              52,
              48,
              58,
              50,
              49,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              102,
              105,
              108,
              101,
              58,
              47,
              47,
              47,
              67,
              58,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              109,
              111,
              104,
              97,
              109,
              47,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              47,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              47,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              47,
              115,
              114,
              99,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              115,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              46,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              46,
              106,
              115,
              58,
              55,
              49,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              46,
              106,
              115,
              58,
              49,
              52,
              57,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              82,
              111,
              117,
              116,
              101,
              46,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              46,
              106,
              115,
              58,
              49,
              49,
              57,
              58,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              52,
              58,
              49,
              53,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              49,
              55,
              53,
              58,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              114,
              111,
              117,
              116,
              101,
              114,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              52,
              55,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              116,
              114,
              105,
              109,
              95,
              112,
              114,
              101,
              102,
              105,
              120,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              50,
              56,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              54,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              112,
              114,
              111,
              102,
              105,
              108,
              101,
              84,
              97,
              115,
              107,
              115,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              80,
              79,
              83,
              84,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 49,
          "responseSize": 3331
        },
        "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Error message present",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9c372ace-14cc-4701-9b04-b005b3ed7168",
          "length": 9,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "33438c14-14dc-4b0e-88dd-2ff240e21dca"
        },
        "item": {
          "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
          "name": "Get Deleted ProfileTask (Should Fail)",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "{{profiletask_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message indicates ProfileTask not found', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('error');",
                  "});"
                ],
                "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "profileTasks",
              "1"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3954b080-d185-487d-85a5-b8ea00168b14",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b593bcca-5eac-4f57-a881-302f7cd42146",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:04.034Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:04 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              217,
              133,
              217,
              135,
              217,
              133,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              217,
              132,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              180,
              216,
              174,
              216,
              181,
              217,
              138,
              32,
              216,
              186,
              217,
              138,
              216,
              177,
              32,
              217,
              133,
              217,
              136,
              216,
              172,
              217,
              136,
              216,
              175,
              216,
              169,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 157,
          "responseSize": 81
        },
        "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false
          },
          {
            "assertion": "Error message indicates ProfileTask not found",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Error message indicates ProfileTask not found",
              "message": "expected { success: true, …(1) } to have property 'error'",
              "stack": "AssertionError: expected { success: true, …(1) } to have property 'error'\n   at Object.eval sandbox-script.js:2:9)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 5879
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "ProfileTask created successfully",
          "message": "expected { success: true, …(2) } to have property 'id'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "f61c62cb21d081957426c2415fd47d23",
          "id": "b30b7e22-65fe-4bcd-94ff-66b2426fe692",
          "timestamp": 1756217342106,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "7bfa4208-1867-4014-b6fb-504aab183342",
          "name": "Create ProfileTask",
          "request": {
            "url": {
              "path": [
                "profileTasks"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('ProfileTask created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('profile_id');",
                  "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                  "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                  "    pm.expect(responseJson).to.have.property('bot_dur');",
                  "    pm.expect(responseJson).to.have.property('s_members');",
                  "    pm.expect(responseJson).to.have.property('s_online');",
                  "    pm.expect(responseJson).to.have.property('s_boosts');",
                  "    pm.expect(responseJson).to.have.property('s_votes');",
                  "    pm.expect(responseJson).to.have.property('s_chat');",
                  "    pm.expect(responseJson).to.have.property('bd_shard');",
                  "    pm.expect(responseJson).to.have.property('sm_shard');",
                  "    pm.expect(responseJson).to.have.property('so_shard');",
                  "    pm.expect(responseJson).to.have.property('sb_shard');",
                  "    pm.expect(responseJson).to.have.property('sv_shard');",
                  "    pm.expect(responseJson).to.have.property('si_shard');",
                  "    ",
                  "    // Store the created ProfileTask ID for later tests",
                  "    pm.environment.set('profiletask_id', responseJson.id);",
                  "});"
                ],
                "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "profiletasks-api-tests"
          },
          "item": [
            {
              "id": "7bfa4208-1867-4014-b6fb-504aab183342",
              "name": "Create ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('ProfileTask created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('profile_id');",
                      "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                      "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                      "    pm.expect(responseJson).to.have.property('bot_dur');",
                      "    pm.expect(responseJson).to.have.property('s_members');",
                      "    pm.expect(responseJson).to.have.property('s_online');",
                      "    pm.expect(responseJson).to.have.property('s_boosts');",
                      "    pm.expect(responseJson).to.have.property('s_votes');",
                      "    pm.expect(responseJson).to.have.property('s_chat');",
                      "    pm.expect(responseJson).to.have.property('bd_shard');",
                      "    pm.expect(responseJson).to.have.property('sm_shard');",
                      "    pm.expect(responseJson).to.have.property('so_shard');",
                      "    pm.expect(responseJson).to.have.property('sb_shard');",
                      "    pm.expect(responseJson).to.have.property('sv_shard');",
                      "    pm.expect(responseJson).to.have.property('si_shard');",
                      "    ",
                      "    // Store the created ProfileTask ID for later tests",
                      "    pm.environment.set('profiletask_id', responseJson.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
                  }
                }
              ]
            },
            {
              "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
              "name": "Get All ProfileTasks",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
                  }
                }
              ]
            },
            {
              "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
              "name": "Get ProfileTask by ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask retrieved successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                      "});"
                    ],
                    "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
                  }
                }
              ]
            },
            {
              "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
              "name": "Get ProfileTasks by Profile ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "profile",
                    "{{profile_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7b688c69-dea6-4572-be9a-339d97766672",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
                  }
                }
              ]
            },
            {
              "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
              "name": "Get ProfileTasks by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "guild",
                    "{{guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
                  }
                }
              ]
            },
            {
              "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
              "name": "Update ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2da158af-4128-41f1-b302-52d00a07be51",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.bd_shard).to.equal(2);",
                      "    pm.expect(responseJson.sm_shard).to.equal(2);",
                      "});"
                    ],
                    "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
                  }
                }
              ]
            },
            {
              "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
              "name": "Delete ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('ProfileTask deleted successfully', function () {",
                      "    // Check if response has a success message or is empty",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
                  }
                }
              ]
            },
            {
              "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
              "name": "Create ProfileTask with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "543c1105-a678-4cc7-b359-828ba289e228",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
                  }
                }
              ]
            },
            {
              "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
              "name": "Get Deleted ProfileTask (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates ProfileTask not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "profiletasks-api-tests",
            "name": "ProfileTasks API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive tests for ProfileTasks API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 9,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1ca56c3d-2a3b-499f-a73d-4cb04c4c532a",
          "httpRequestId": "b1e94f45-8bc4-441c-8032-ebae60c589e8",
          "scriptId": "c2407158-8cf2-4e0c-b034-a1a467717221",
          "execution": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "ff13c0eac9917baf6d853ec65a767683",
          "id": "97d65dc2-2522-46a2-a6e2-ddd66351ab75",
          "timestamp": 1756217342234,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
          "name": "Get All ProfileTasks",
          "request": {
            "url": {
              "path": [
                "profileTasks"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "profiletasks-api-tests"
          },
          "item": [
            {
              "id": "7bfa4208-1867-4014-b6fb-504aab183342",
              "name": "Create ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('ProfileTask created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('profile_id');",
                      "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                      "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                      "    pm.expect(responseJson).to.have.property('bot_dur');",
                      "    pm.expect(responseJson).to.have.property('s_members');",
                      "    pm.expect(responseJson).to.have.property('s_online');",
                      "    pm.expect(responseJson).to.have.property('s_boosts');",
                      "    pm.expect(responseJson).to.have.property('s_votes');",
                      "    pm.expect(responseJson).to.have.property('s_chat');",
                      "    pm.expect(responseJson).to.have.property('bd_shard');",
                      "    pm.expect(responseJson).to.have.property('sm_shard');",
                      "    pm.expect(responseJson).to.have.property('so_shard');",
                      "    pm.expect(responseJson).to.have.property('sb_shard');",
                      "    pm.expect(responseJson).to.have.property('sv_shard');",
                      "    pm.expect(responseJson).to.have.property('si_shard');",
                      "    ",
                      "    // Store the created ProfileTask ID for later tests",
                      "    pm.environment.set('profiletask_id', responseJson.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
                  }
                }
              ]
            },
            {
              "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
              "name": "Get All ProfileTasks",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
                  }
                }
              ]
            },
            {
              "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
              "name": "Get ProfileTask by ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask retrieved successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                      "});"
                    ],
                    "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
                  }
                }
              ]
            },
            {
              "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
              "name": "Get ProfileTasks by Profile ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "profile",
                    "{{profile_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7b688c69-dea6-4572-be9a-339d97766672",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
                  }
                }
              ]
            },
            {
              "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
              "name": "Get ProfileTasks by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "guild",
                    "{{guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
                  }
                }
              ]
            },
            {
              "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
              "name": "Update ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2da158af-4128-41f1-b302-52d00a07be51",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.bd_shard).to.equal(2);",
                      "    pm.expect(responseJson.sm_shard).to.equal(2);",
                      "});"
                    ],
                    "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
                  }
                }
              ]
            },
            {
              "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
              "name": "Delete ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('ProfileTask deleted successfully', function () {",
                      "    // Check if response has a success message or is empty",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
                  }
                }
              ]
            },
            {
              "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
              "name": "Create ProfileTask with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "543c1105-a678-4cc7-b359-828ba289e228",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
                  }
                }
              ]
            },
            {
              "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
              "name": "Get Deleted ProfileTask (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates ProfileTask not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "profiletasks-api-tests",
            "name": "ProfileTasks API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive tests for ProfileTasks API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d5f6c100-4e27-4513-a494-6b71809603b2",
          "length": 9,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a0d159c6-728e-4ef5-8ac0-b8f87187d9dc",
          "scriptId": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
          "execution": "815017e1-6738-4b30-bb56-914bf9c68da7"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:3)",
          "checksum": "195341be17196c94d1afd7f73cce9151",
          "id": "2b3af40f-cf89-43e5-b59c-d98d69031494",
          "timestamp": 1756217342669,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
          "name": "Get ProfileTask by ID",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "{{profiletask_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('ProfileTask retrieved successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                  "});"
                ],
                "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "profiletasks-api-tests"
          },
          "item": [
            {
              "id": "7bfa4208-1867-4014-b6fb-504aab183342",
              "name": "Create ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('ProfileTask created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('profile_id');",
                      "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                      "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                      "    pm.expect(responseJson).to.have.property('bot_dur');",
                      "    pm.expect(responseJson).to.have.property('s_members');",
                      "    pm.expect(responseJson).to.have.property('s_online');",
                      "    pm.expect(responseJson).to.have.property('s_boosts');",
                      "    pm.expect(responseJson).to.have.property('s_votes');",
                      "    pm.expect(responseJson).to.have.property('s_chat');",
                      "    pm.expect(responseJson).to.have.property('bd_shard');",
                      "    pm.expect(responseJson).to.have.property('sm_shard');",
                      "    pm.expect(responseJson).to.have.property('so_shard');",
                      "    pm.expect(responseJson).to.have.property('sb_shard');",
                      "    pm.expect(responseJson).to.have.property('sv_shard');",
                      "    pm.expect(responseJson).to.have.property('si_shard');",
                      "    ",
                      "    // Store the created ProfileTask ID for later tests",
                      "    pm.environment.set('profiletask_id', responseJson.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
                  }
                }
              ]
            },
            {
              "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
              "name": "Get All ProfileTasks",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
                  }
                }
              ]
            },
            {
              "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
              "name": "Get ProfileTask by ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask retrieved successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                      "});"
                    ],
                    "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
                  }
                }
              ]
            },
            {
              "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
              "name": "Get ProfileTasks by Profile ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "profile",
                    "{{profile_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7b688c69-dea6-4572-be9a-339d97766672",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
                  }
                }
              ]
            },
            {
              "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
              "name": "Get ProfileTasks by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "guild",
                    "{{guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
                  }
                }
              ]
            },
            {
              "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
              "name": "Update ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2da158af-4128-41f1-b302-52d00a07be51",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.bd_shard).to.equal(2);",
                      "    pm.expect(responseJson.sm_shard).to.equal(2);",
                      "});"
                    ],
                    "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
                  }
                }
              ]
            },
            {
              "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
              "name": "Delete ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('ProfileTask deleted successfully', function () {",
                      "    // Check if response has a success message or is empty",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
                  }
                }
              ]
            },
            {
              "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
              "name": "Create ProfileTask with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "543c1105-a678-4cc7-b359-828ba289e228",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
                  }
                }
              ]
            },
            {
              "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
              "name": "Get Deleted ProfileTask (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates ProfileTask not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "profiletasks-api-tests",
            "name": "ProfileTasks API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive tests for ProfileTasks API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e9d89d3e-4abd-4610-8168-9cd22a3bae47",
          "length": 9,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7be108c9-98fb-4110-98e3-1a6e589ee436",
          "scriptId": "5eb56bf4-b7e2-4058-af44-291e623abd66",
          "execution": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "ProfileTask retrieved successfully",
          "message": "expected { success: true, …(1) } to have property 'id'",
          "stack": "AssertionError: expected { success: true, …(1) } to have property 'id'\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "8624296fb579d6329dfd5745e2ecaa8a",
          "id": "7f29d0bc-cc98-441d-8089-bcb48c11d4c3",
          "timestamp": 1756217342670,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
          "name": "Get ProfileTask by ID",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "{{profiletask_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('ProfileTask retrieved successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                  "});"
                ],
                "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "profiletasks-api-tests"
          },
          "item": [
            {
              "id": "7bfa4208-1867-4014-b6fb-504aab183342",
              "name": "Create ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('ProfileTask created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('profile_id');",
                      "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                      "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                      "    pm.expect(responseJson).to.have.property('bot_dur');",
                      "    pm.expect(responseJson).to.have.property('s_members');",
                      "    pm.expect(responseJson).to.have.property('s_online');",
                      "    pm.expect(responseJson).to.have.property('s_boosts');",
                      "    pm.expect(responseJson).to.have.property('s_votes');",
                      "    pm.expect(responseJson).to.have.property('s_chat');",
                      "    pm.expect(responseJson).to.have.property('bd_shard');",
                      "    pm.expect(responseJson).to.have.property('sm_shard');",
                      "    pm.expect(responseJson).to.have.property('so_shard');",
                      "    pm.expect(responseJson).to.have.property('sb_shard');",
                      "    pm.expect(responseJson).to.have.property('sv_shard');",
                      "    pm.expect(responseJson).to.have.property('si_shard');",
                      "    ",
                      "    // Store the created ProfileTask ID for later tests",
                      "    pm.environment.set('profiletask_id', responseJson.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
                  }
                }
              ]
            },
            {
              "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
              "name": "Get All ProfileTasks",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
                  }
                }
              ]
            },
            {
              "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
              "name": "Get ProfileTask by ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask retrieved successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                      "});"
                    ],
                    "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
                  }
                }
              ]
            },
            {
              "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
              "name": "Get ProfileTasks by Profile ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "profile",
                    "{{profile_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7b688c69-dea6-4572-be9a-339d97766672",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
                  }
                }
              ]
            },
            {
              "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
              "name": "Get ProfileTasks by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "guild",
                    "{{guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
                  }
                }
              ]
            },
            {
              "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
              "name": "Update ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2da158af-4128-41f1-b302-52d00a07be51",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.bd_shard).to.equal(2);",
                      "    pm.expect(responseJson.sm_shard).to.equal(2);",
                      "});"
                    ],
                    "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
                  }
                }
              ]
            },
            {
              "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
              "name": "Delete ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('ProfileTask deleted successfully', function () {",
                      "    // Check if response has a success message or is empty",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
                  }
                }
              ]
            },
            {
              "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
              "name": "Create ProfileTask with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "543c1105-a678-4cc7-b359-828ba289e228",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
                  }
                }
              ]
            },
            {
              "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
              "name": "Get Deleted ProfileTask (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates ProfileTask not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "profiletasks-api-tests",
            "name": "ProfileTasks API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive tests for ProfileTasks API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e9d89d3e-4abd-4610-8168-9cd22a3bae47",
          "length": 9,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7be108c9-98fb-4110-98e3-1a6e589ee436",
          "scriptId": "5eb56bf4-b7e2-4058-af44-291e623abd66",
          "execution": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "588104bc8e3ab9b818f74cdcf0c37a31",
          "id": "cf45f778-e98c-4b94-8e8f-6d47930ee36a",
          "timestamp": 1756217343177,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
          "name": "Get ProfileTasks by Profile ID",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "profile",
                "{{profile_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7b688c69-dea6-4572-be9a-339d97766672",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "profiletasks-api-tests"
          },
          "item": [
            {
              "id": "7bfa4208-1867-4014-b6fb-504aab183342",
              "name": "Create ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('ProfileTask created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('profile_id');",
                      "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                      "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                      "    pm.expect(responseJson).to.have.property('bot_dur');",
                      "    pm.expect(responseJson).to.have.property('s_members');",
                      "    pm.expect(responseJson).to.have.property('s_online');",
                      "    pm.expect(responseJson).to.have.property('s_boosts');",
                      "    pm.expect(responseJson).to.have.property('s_votes');",
                      "    pm.expect(responseJson).to.have.property('s_chat');",
                      "    pm.expect(responseJson).to.have.property('bd_shard');",
                      "    pm.expect(responseJson).to.have.property('sm_shard');",
                      "    pm.expect(responseJson).to.have.property('so_shard');",
                      "    pm.expect(responseJson).to.have.property('sb_shard');",
                      "    pm.expect(responseJson).to.have.property('sv_shard');",
                      "    pm.expect(responseJson).to.have.property('si_shard');",
                      "    ",
                      "    // Store the created ProfileTask ID for later tests",
                      "    pm.environment.set('profiletask_id', responseJson.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
                  }
                }
              ]
            },
            {
              "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
              "name": "Get All ProfileTasks",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
                  }
                }
              ]
            },
            {
              "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
              "name": "Get ProfileTask by ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask retrieved successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                      "});"
                    ],
                    "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
                  }
                }
              ]
            },
            {
              "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
              "name": "Get ProfileTasks by Profile ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "profile",
                    "{{profile_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7b688c69-dea6-4572-be9a-339d97766672",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
                  }
                }
              ]
            },
            {
              "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
              "name": "Get ProfileTasks by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "guild",
                    "{{guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
                  }
                }
              ]
            },
            {
              "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
              "name": "Update ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2da158af-4128-41f1-b302-52d00a07be51",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.bd_shard).to.equal(2);",
                      "    pm.expect(responseJson.sm_shard).to.equal(2);",
                      "});"
                    ],
                    "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
                  }
                }
              ]
            },
            {
              "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
              "name": "Delete ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('ProfileTask deleted successfully', function () {",
                      "    // Check if response has a success message or is empty",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
                  }
                }
              ]
            },
            {
              "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
              "name": "Create ProfileTask with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "543c1105-a678-4cc7-b359-828ba289e228",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
                  }
                }
              ]
            },
            {
              "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
              "name": "Get Deleted ProfileTask (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates ProfileTask not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "profiletasks-api-tests",
            "name": "ProfileTasks API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive tests for ProfileTasks API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b5c17469-db69-4ac0-b0a5-067a500b968e",
          "length": 9,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f670e319-bc67-4d30-b53f-f8d801e59b58",
          "scriptId": "7b688c69-dea6-4572-be9a-339d97766672",
          "execution": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "9d59931dcdb9490e09004521d65b322e",
          "id": "72baca25-bc2d-4145-bfef-5d73816b319e",
          "timestamp": 1756217343676,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
          "name": "Get ProfileTasks by Guild ID",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "guild",
                "{{guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "profiletasks-api-tests"
          },
          "item": [
            {
              "id": "7bfa4208-1867-4014-b6fb-504aab183342",
              "name": "Create ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('ProfileTask created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('profile_id');",
                      "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                      "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                      "    pm.expect(responseJson).to.have.property('bot_dur');",
                      "    pm.expect(responseJson).to.have.property('s_members');",
                      "    pm.expect(responseJson).to.have.property('s_online');",
                      "    pm.expect(responseJson).to.have.property('s_boosts');",
                      "    pm.expect(responseJson).to.have.property('s_votes');",
                      "    pm.expect(responseJson).to.have.property('s_chat');",
                      "    pm.expect(responseJson).to.have.property('bd_shard');",
                      "    pm.expect(responseJson).to.have.property('sm_shard');",
                      "    pm.expect(responseJson).to.have.property('so_shard');",
                      "    pm.expect(responseJson).to.have.property('sb_shard');",
                      "    pm.expect(responseJson).to.have.property('sv_shard');",
                      "    pm.expect(responseJson).to.have.property('si_shard');",
                      "    ",
                      "    // Store the created ProfileTask ID for later tests",
                      "    pm.environment.set('profiletask_id', responseJson.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
                  }
                }
              ]
            },
            {
              "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
              "name": "Get All ProfileTasks",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
                  }
                }
              ]
            },
            {
              "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
              "name": "Get ProfileTask by ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask retrieved successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                      "});"
                    ],
                    "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
                  }
                }
              ]
            },
            {
              "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
              "name": "Get ProfileTasks by Profile ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "profile",
                    "{{profile_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7b688c69-dea6-4572-be9a-339d97766672",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
                  }
                }
              ]
            },
            {
              "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
              "name": "Get ProfileTasks by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "guild",
                    "{{guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
                  }
                }
              ]
            },
            {
              "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
              "name": "Update ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2da158af-4128-41f1-b302-52d00a07be51",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.bd_shard).to.equal(2);",
                      "    pm.expect(responseJson.sm_shard).to.equal(2);",
                      "});"
                    ],
                    "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
                  }
                }
              ]
            },
            {
              "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
              "name": "Delete ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('ProfileTask deleted successfully', function () {",
                      "    // Check if response has a success message or is empty",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
                  }
                }
              ]
            },
            {
              "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
              "name": "Create ProfileTask with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "543c1105-a678-4cc7-b359-828ba289e228",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
                  }
                }
              ]
            },
            {
              "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
              "name": "Get Deleted ProfileTask (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates ProfileTask not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "profiletasks-api-tests",
            "name": "ProfileTasks API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive tests for ProfileTasks API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "19232ea6-c916-435d-8c39-998c3f1ecba7",
          "length": 9,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b0635698-0720-4b62-933a-bdc582d6d9cb",
          "scriptId": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
          "execution": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "ProfileTask updated successfully",
          "message": "expected { success: true, …(2) } to have property 'id'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:6)",
          "checksum": "0e615a2cbb9f7ae97978c25d7a37479a",
          "id": "bc6b84fc-dd9e-41c1-98ba-33c4e86ca346",
          "timestamp": 1756217343800,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
          "name": "Update ProfileTask",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "{{profiletask_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2da158af-4128-41f1-b302-52d00a07be51",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('ProfileTask updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson.bd_shard).to.equal(2);",
                  "    pm.expect(responseJson.sm_shard).to.equal(2);",
                  "});"
                ],
                "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "profiletasks-api-tests"
          },
          "item": [
            {
              "id": "7bfa4208-1867-4014-b6fb-504aab183342",
              "name": "Create ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('ProfileTask created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('profile_id');",
                      "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                      "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                      "    pm.expect(responseJson).to.have.property('bot_dur');",
                      "    pm.expect(responseJson).to.have.property('s_members');",
                      "    pm.expect(responseJson).to.have.property('s_online');",
                      "    pm.expect(responseJson).to.have.property('s_boosts');",
                      "    pm.expect(responseJson).to.have.property('s_votes');",
                      "    pm.expect(responseJson).to.have.property('s_chat');",
                      "    pm.expect(responseJson).to.have.property('bd_shard');",
                      "    pm.expect(responseJson).to.have.property('sm_shard');",
                      "    pm.expect(responseJson).to.have.property('so_shard');",
                      "    pm.expect(responseJson).to.have.property('sb_shard');",
                      "    pm.expect(responseJson).to.have.property('sv_shard');",
                      "    pm.expect(responseJson).to.have.property('si_shard');",
                      "    ",
                      "    // Store the created ProfileTask ID for later tests",
                      "    pm.environment.set('profiletask_id', responseJson.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
                  }
                }
              ]
            },
            {
              "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
              "name": "Get All ProfileTasks",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
                  }
                }
              ]
            },
            {
              "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
              "name": "Get ProfileTask by ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask retrieved successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                      "});"
                    ],
                    "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
                  }
                }
              ]
            },
            {
              "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
              "name": "Get ProfileTasks by Profile ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "profile",
                    "{{profile_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7b688c69-dea6-4572-be9a-339d97766672",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
                  }
                }
              ]
            },
            {
              "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
              "name": "Get ProfileTasks by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "guild",
                    "{{guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
                  }
                }
              ]
            },
            {
              "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
              "name": "Update ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2da158af-4128-41f1-b302-52d00a07be51",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.bd_shard).to.equal(2);",
                      "    pm.expect(responseJson.sm_shard).to.equal(2);",
                      "});"
                    ],
                    "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
                  }
                }
              ]
            },
            {
              "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
              "name": "Delete ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('ProfileTask deleted successfully', function () {",
                      "    // Check if response has a success message or is empty",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
                  }
                }
              ]
            },
            {
              "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
              "name": "Create ProfileTask with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "543c1105-a678-4cc7-b359-828ba289e228",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
                  }
                }
              ]
            },
            {
              "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
              "name": "Get Deleted ProfileTask (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates ProfileTask not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "profiletasks-api-tests",
            "name": "ProfileTasks API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive tests for ProfileTasks API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "6ae15f19-5c1a-4846-9ff3-3e80adee642d",
          "length": 9,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5d63c5ca-f44a-452b-bef2-ac2a64734e22",
          "scriptId": "2da158af-4128-41f1-b302-52d00a07be51",
          "execution": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Error message indicates ProfileTask not found",
          "message": "expected { success: true, …(1) } to have property 'error'",
          "stack": "AssertionError: expected { success: true, …(1) } to have property 'error'\n   at Object.eval sandbox-script.js:2:9)",
          "checksum": "eaed0964a12303bd97b315c9af3cb5af",
          "id": "ed5681ee-e5aa-46b1-8629-bcdced6576d4",
          "timestamp": 1756217344216,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
          "name": "Get Deleted ProfileTask (Should Fail)",
          "request": {
            "url": {
              "path": [
                "profileTasks",
                "{{profiletask_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message indicates ProfileTask not found', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('error');",
                  "});"
                ],
                "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "profiletasks-api-tests"
          },
          "item": [
            {
              "id": "7bfa4208-1867-4014-b6fb-504aab183342",
              "name": "Create ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"{{guild_id}}\",\"profile_ch_id\":\"{{profile_ch_id}}\",\"tasks_ch_id\":\"{{tasks_ch_id}}\",\"profile_id\":\"{{profile_id}}\",\"bot_dur\":\"{{bot_dur}}\",\"s_members\":\"{{s_members}}\",\"s_online\":\"{{s_online}}\",\"s_boosts\":\"{{s_boosts}}\",\"s_votes\":\"{{s_votes}}\",\"s_chat\":\"{{s_chat}}\",\"bd_shard\":1,\"sm_shard\":1,\"so_shard\":1,\"sb_shard\":1,\"sv_shard\":1,\"si_shard\":1}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c2407158-8cf2-4e0c-b034-a1a467717221",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('ProfileTask created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('profile_id');",
                      "    pm.expect(responseJson).to.have.property('profile_ch_id');",
                      "    pm.expect(responseJson).to.have.property('tasks_ch_id');",
                      "    pm.expect(responseJson).to.have.property('bot_dur');",
                      "    pm.expect(responseJson).to.have.property('s_members');",
                      "    pm.expect(responseJson).to.have.property('s_online');",
                      "    pm.expect(responseJson).to.have.property('s_boosts');",
                      "    pm.expect(responseJson).to.have.property('s_votes');",
                      "    pm.expect(responseJson).to.have.property('s_chat');",
                      "    pm.expect(responseJson).to.have.property('bd_shard');",
                      "    pm.expect(responseJson).to.have.property('sm_shard');",
                      "    pm.expect(responseJson).to.have.property('so_shard');",
                      "    pm.expect(responseJson).to.have.property('sb_shard');",
                      "    pm.expect(responseJson).to.have.property('sv_shard');",
                      "    pm.expect(responseJson).to.have.property('si_shard');",
                      "    ",
                      "    // Store the created ProfileTask ID for later tests",
                      "    pm.environment.set('profiletask_id', responseJson.id);",
                      "});"
                    ],
                    "_lastExecutionId": "a657bb80-d5c6-4bf8-b80c-6d257f1849df"
                  }
                }
              ]
            },
            {
              "id": "12fb75af-1560-44a4-89ea-1a819d46215d",
              "name": "Get All ProfileTasks",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e641bac2-d5ba-4527-8c33-bd8c1a045cca",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "815017e1-6738-4b30-bb56-914bf9c68da7"
                  }
                }
              ]
            },
            {
              "id": "679c7ce2-8cb7-48ea-9749-f524fef8e315",
              "name": "Get ProfileTask by ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5eb56bf4-b7e2-4058-af44-291e623abd66",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask retrieved successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.id).to.equal(parseInt(pm.environment.get('profiletask_id')));",
                      "});"
                    ],
                    "_lastExecutionId": "c6fb3bf2-3f84-4f33-ba51-4a3263da5f95"
                  }
                }
              ]
            },
            {
              "id": "1e62b3b1-7eb7-4b69-9dee-ad0a6bebed85",
              "name": "Get ProfileTasks by Profile ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "profile",
                    "{{profile_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "7b688c69-dea6-4572-be9a-339d97766672",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "5e645b4d-2569-4204-9e83-03b47cb3fb8f"
                  }
                }
              ]
            },
            {
              "id": "6f5d68df-7152-4234-9bc0-c9fbdcceca8b",
              "name": "Get ProfileTasks by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "guild",
                    "{{guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fa3149fa-71c7-4a50-b218-d882d8ea0474",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "4d8f45b9-49f2-4404-90a0-9b27549f3079"
                  }
                }
              ]
            },
            {
              "id": "4e1dc5a0-5baa-42c8-803e-ccca6b558de7",
              "name": "Update ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"profile_ch_id\":\"{{updated_profile_ch_id}}\",\"tasks_ch_id\":\"{{updated_tasks_ch_id}}\",\"bot_dur\":\"{{updated_bot_dur}}\",\"s_members\":\"{{updated_s_members}}\",\"s_online\":\"{{updated_s_online}}\",\"s_boosts\":\"{{updated_s_boosts}}\",\"s_votes\":\"{{updated_s_votes}}\",\"s_chat\":\"{{updated_s_chat}}\",\"bd_shard\":2,\"sm_shard\":2,\"so_shard\":2,\"sb_shard\":2,\"sv_shard\":2,\"si_shard\":2}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2da158af-4128-41f1-b302-52d00a07be51",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('ProfileTask updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson.bd_shard).to.equal(2);",
                      "    pm.expect(responseJson.sm_shard).to.equal(2);",
                      "});"
                    ],
                    "_lastExecutionId": "95b4be38-ac06-4544-8afa-78a9adcd04e5"
                  }
                }
              ]
            },
            {
              "id": "8e16cfef-9781-477d-83c1-8e7ed24797c2",
              "name": "Delete ProfileTask",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ed4f0064-a997-482e-9490-f062ae3e9550",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('ProfileTask deleted successfully', function () {",
                      "    // Check if response has a success message or is empty",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "4fee734f-f1b5-4957-ae3a-26b9bbfce0d4"
                  }
                }
              ]
            },
            {
              "id": "4bff477f-557d-4eb0-a14e-51e0ce71eca9",
              "name": "Create ProfileTask with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "profileTasks"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"guild_id\":\"\",\"profile_ch_id\":\"\",\"tasks_ch_id\":\"\",\"profile_id\":\"\",\"bot_dur\":\"\",\"invalid_field\":\"invalid_value\"}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "543c1105-a678-4cc7-b359-828ba289e228",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "abff0e64-2fed-4ff7-8a60-89d14147e8af"
                  }
                }
              ]
            },
            {
              "id": "e5fff54e-fc63-4494-a1d6-01f968177f83",
              "name": "Get Deleted ProfileTask (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "profileTasks",
                    "{{profiletask_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates ProfileTask not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "profiletasks-api-tests",
            "name": "ProfileTasks API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "Comprehensive tests for ProfileTasks API endpoints",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "9c372ace-14cc-4701-9b04-b005b3ed7168",
          "length": 9,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "33438c14-14dc-4b0e-88dd-2ff240e21dca",
          "scriptId": "ef9a9762-a48b-4f6c-8d17-aa8673bbdd6f",
          "execution": "c0f60e77-3530-49d0-9731-ffe5b9c7ae9f"
        }
      }
    ],
    "error": null
  }
}