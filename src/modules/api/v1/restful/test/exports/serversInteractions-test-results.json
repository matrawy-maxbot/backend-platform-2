{
  "collection": {
    "_": {
      "postman_id": "serversinteractions-api-tests"
    },
    "item": [
      {
        "id": "c279683d-335e-4547-8610-10d8f25a8863",
        "name": "Create Interaction",
        "request": {
          "url": {
            "path": [
              "serversInteractions"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 201', function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test('Interaction created successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('user_id');",
                "    pm.expect(responseJson).to.have.property('guild_id');",
                "    pm.expect(responseJson).to.have.property('chat_points');",
                "    pm.expect(responseJson).to.have.property('voice_points');",
                "    pm.expect(responseJson).to.have.property('chat_level');",
                "    pm.expect(responseJson).to.have.property('voice_level');",
                "});",
                "",
                "pm.test('Default values are correct', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson.chat_points).to.equal(0);",
                "    pm.expect(responseJson.voice_points).to.equal(0);",
                "    pm.expect(responseJson.chat_level).to.equal(1);",
                "    pm.expect(responseJson.voice_level).to.equal(1);",
                "});"
              ],
              "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
            }
          }
        ]
      },
      {
        "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
        "name": "Get All Interactions",
        "request": {
          "url": {
            "path": [
              "serversInteractions"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
            }
          }
        ]
      },
      {
        "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
        "name": "Get Interaction Stats",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "stats"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Stats data is returned', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('totalInteractions');",
                "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                "});"
              ],
              "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
            }
          }
        ]
      },
      {
        "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
        "name": "Get Interaction by User and Guild",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "aba71457-995c-4173-b55a-e9806975408d",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Interaction data is returned', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('user_id');",
                "    pm.expect(responseJson).to.have.property('guild_id');",
                "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                "});"
              ],
              "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
            }
          }
        ]
      },
      {
        "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
        "name": "Get Interactions by User",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
            }
          }
        ]
      },
      {
        "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
        "name": "Get Interactions by Guild",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "guild",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
            }
          }
        ]
      },
      {
        "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
        "name": "Get Interactions by Chat Level",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "chat-level",
              "{{min_chat_level}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "d64ebee6-1320-431c-afaf-d8a105814410",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
            }
          }
        ]
      },
      {
        "id": "693336fe-00f6-405d-a3de-4bff6a935096",
        "name": "Get Interactions by Voice Level",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "voice-level",
              "{{min_voice_level}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a2036d83-70df-419c-be07-f286998e5973",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
            }
          }
        ]
      },
      {
        "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
        "name": "Update Interaction",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Interaction updated successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('chat_points');",
                "    pm.expect(responseJson).to.have.property('voice_points');",
                "    pm.expect(responseJson.chat_points).to.equal(100);",
                "    pm.expect(responseJson.voice_points).to.equal(50);",
                "});"
              ],
              "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
            }
          }
        ]
      },
      {
        "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
        "name": "Update Chat Points",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}",
              "chat-points"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\"points\":150}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Chat points updated successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('chat_points');",
                "    pm.expect(responseJson.chat_points).to.equal(150);",
                "});"
              ],
              "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
            }
          }
        ]
      },
      {
        "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
        "name": "Update Voice Points",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}",
              "voice-points"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\"points\":75}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Voice points updated successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('voice_points');",
                "    pm.expect(responseJson.voice_points).to.equal(75);",
                "});"
              ],
              "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
            }
          }
        ]
      },
      {
        "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
        "name": "Increment Chat Points",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}",
              "increment-chat"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\"increment\":10}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Chat points incremented successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('chat_points');",
                "    pm.expect(responseJson.chat_points).to.be.above(150);",
                "});"
              ],
              "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
            }
          }
        ]
      },
      {
        "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
        "name": "Increment Voice Points",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}",
              "increment-voice"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\"increment\":5}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Voice points incremented successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('voice_points');",
                "    pm.expect(responseJson.voice_points).to.be.above(75);",
                "});"
              ],
              "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
            }
          }
        ]
      },
      {
        "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
        "name": "Create Interaction with Invalid Data",
        "request": {
          "url": {
            "path": [
              "serversInteractions"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 400', function () {",
                "    pm.response.to.have.status(400);",
                "});",
                "",
                "pm.test('Validation error is returned', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('error');",
                "});"
              ],
              "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
            }
          }
        ]
      },
      {
        "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
        "name": "Delete Interaction",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200 or 204', function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                "});",
                "",
                "pm.test('Interaction deleted successfully', function () {",
                "    if (pm.response.code === 200) {",
                "        const responseJson = pm.response.json();",
                "        pm.expect(responseJson).to.have.property('message');",
                "    }",
                "});"
              ],
              "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
            }
          }
        ]
      },
      {
        "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
        "name": "Delete All User Interactions",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id_2}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200 or 204', function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                "});",
                "",
                "pm.test('User interactions deleted successfully', function () {",
                "    if (pm.response.code === 200) {",
                "        const responseJson = pm.response.json();",
                "        pm.expect(responseJson).to.have.property('message');",
                "    }",
                "});"
              ],
              "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
            }
          }
        ]
      },
      {
        "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
        "name": "Delete All Guild Interactions",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "guild",
              "{{test_guild_id_2}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200 or 204', function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                "});",
                "",
                "pm.test('Guild interactions deleted successfully', function () {",
                "    if (pm.response.code === 200) {",
                "        const responseJson = pm.response.json();",
                "        pm.expect(responseJson).to.have.property('message');",
                "    }",
                "});"
              ],
              "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
            }
          }
        ]
      },
      {
        "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
        "name": "Get Deleted Interaction (Should Fail)",
        "request": {
          "url": {
            "path": [
              "serversInteractions",
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "def463f9-41f2-4959-a547-d4adeda3608c",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 404', function () {",
                "    pm.response.to.have.status(404);",
                "});",
                "",
                "pm.test('Error message is returned', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('error');",
                "});"
              ],
              "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "serversinteractions-api-tests",
      "name": "ServersInteractions API Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "servers-interactions-test-env",
    "name": "ServersInteractions Test Environment",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:3000/api/v1",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "tu_1756217340772",
        "key": "test_user_id"
      },
      {
        "type": "any",
        "value": "tg_1756217340772",
        "key": "test_guild_id"
      },
      {
        "type": "any",
        "value": "2",
        "key": "min_chat_level"
      },
      {
        "type": "any",
        "value": "2",
        "key": "min_voice_level"
      },
      {
        "type": "any",
        "value": "tu2_1756217340772",
        "key": "test_user_id_2"
      },
      {
        "type": "any",
        "value": "tg2_1756217340772",
        "key": "test_guild_id_2"
      }
    ]
  },
  "globals": {
    "id": "b891cf1c-b7e9-452e-a61f-4c0c9b93f9a1",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 37,
        "pending": 0,
        "failed": 16
      },
      "testScripts": {
        "total": 18,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 206.44444444444446,
      "responseMin": 30,
      "responseMax": 471,
      "responseSd": 179.55847769899432,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1756217341376,
      "completed": 1756217355315
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 18,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9dd74253-a87a-4a88-8844-d13883580008",
          "httpRequestId": "911ae11c-99c2-44ef-a2e3-db1b85fbe011"
        },
        "item": {
          "id": "c279683d-335e-4547-8610-10d8f25a8863",
          "name": "Create Interaction",
          "request": {
            "url": {
              "path": [
                "serversInteractions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Interaction created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user_id');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson).to.have.property('chat_level');",
                  "    pm.expect(responseJson).to.have.property('voice_level');",
                  "});",
                  "",
                  "pm.test('Default values are correct', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.chat_points).to.equal(0);",
                  "    pm.expect(responseJson.voice_points).to.equal(0);",
                  "    pm.expect(responseJson.chat_level).to.equal(1);",
                  "    pm.expect(responseJson.voice_level).to.equal(1);",
                  "});"
                ],
                "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "748c7c5c-32d3-4dfc-ba2c-d48972f74b29",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "124",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"user_id\":\"tu_1756217340772\",\"guild_id\":\"tg_1756217340772\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
          }
        },
        "response": {
          "id": "5a70416b-cb83-45ac-b8fd-36eb025e3ea5",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:02.171Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:02 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              165,
              217,
              134,
              216,
              180,
              216,
              167,
              216,
              161,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              73,
              110,
              115,
              101,
              114,
              116,
              32,
              111,
              112,
              101,
              114,
              97,
              116,
              105,
              111,
              110,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              44,
              34,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              53,
              100,
              99,
              50,
              56,
              98,
              52,
              45,
              54,
              98,
              57,
              57,
              45,
              52,
              50,
              99,
              55,
              45,
              98,
              55,
              97,
              53,
              45,
              49,
              51,
              99,
              99,
              100,
              52,
              51,
              98,
              101,
              57,
              48,
              48,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              125,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 127,
          "responseSize": 415
        },
        "id": "c279683d-335e-4547-8610-10d8f25a8863",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Interaction created successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Interaction created successfully",
              "message": "expected { success: true, …(2) } to have property 'user_id'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'user_id'\n   at Object.eval sandbox-script.js:2:1)"
            }
          },
          {
            "assertion": "Default values are correct",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Default values are correct",
              "message": "expected undefined to equal +0",
              "stack": "AssertionError: expected undefined to equal +0\n   at Object.eval sandbox-script.js:3:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d3188de5-37ed-451b-a56b-6b14addddc0d",
          "length": 18,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "53a012b3-56b0-477a-a58d-23a71a2036ec"
        },
        "item": {
          "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
          "name": "Get All Interactions",
          "request": {
            "url": {
              "path": [
                "serversInteractions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "588efd96-c28e-451d-967f-d9adace4c13f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "0ad648ed-d43a-4897-9ecb-fcc3417d0ed8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:02.851Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:02 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              172,
              217,
              133,
              217,
              138,
              216,
              185,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              101,
              97,
              55,
              101,
              51,
              56,
              48,
              99,
              45,
              57,
              55,
              50,
              57,
              45,
              52,
              98,
              52,
              97,
              45,
              57,
              49,
              100,
              57,
              45,
              50,
              102,
              57,
              52,
              56,
              54,
              49,
              102,
              101,
              49,
              102,
              101,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              54,
              53,
              54,
              56,
              51,
              50,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              54,
              53,
              54,
              56,
              51,
              50,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              51,
              58,
              53,
              54,
              58,
              48,
              57,
              46,
              53,
              55,
              50,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              51,
              58,
              53,
              54,
              58,
              48,
              57,
              46,
              53,
              55,
              50,
              90,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              53,
              100,
              99,
              50,
              56,
              98,
              52,
              45,
              54,
              98,
              57,
              57,
              45,
              52,
              50,
              99,
              55,
              45,
              98,
              55,
              97,
              53,
              45,
              49,
              51,
              99,
              99,
              100,
              52,
              51,
              98,
              101,
              57,
              48,
              48,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              53,
              53,
              49,
              102,
              97,
              102,
              100,
              45,
              51,
              102,
              100,
              55,
              45,
              52,
              48,
              56,
              53,
              45,
              57,
              50,
              53,
              97,
              45,
              48,
              97,
              100,
              99,
              51,
              57,
              97,
              102,
              57,
              50,
              97,
              54,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              48,
              55,
              56,
              53,
              53,
              56,
              52,
              51,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              48,
              55,
              56,
              53,
              53,
              56,
              52,
              51,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              49,
              54,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              56,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              55,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              49,
              58,
              48,
              54,
              46,
              52,
              57,
              49,
              90,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              101,
              52,
              57,
              100,
              50,
              52,
              101,
              45,
              50,
              54,
              50,
              57,
              45,
              52,
              55,
              55,
              102,
              45,
              57,
              53,
              98,
              55,
              45,
              52,
              102,
              57,
              102,
              98,
              54,
              55,
              102,
              52,
              55,
              49,
              52,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              50,
              49,
              52,
              53,
              57,
              55,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              50,
              49,
              52,
              53,
              57,
              55,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              49,
              54,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              56,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              50,
              58,
              52,
              50,
              58,
              50,
              54,
              46,
              57,
              50,
              54,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              50,
              58,
              52,
              50,
              58,
              51,
              54,
              46,
              54,
              49,
              54,
              90,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 32,
          "responseSize": 1091
        },
        "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e88668ce-da5c-402c-8d20-2b2b7295cf00",
          "length": 18,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e829e0a7-edc2-46ec-adb2-bc3df0e5138e"
        },
        "item": {
          "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
          "name": "Get Interaction Stats",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "stats"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats data is returned', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('totalInteractions');",
                  "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                  "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                  "});"
                ],
                "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "stats"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b5c6532f-97c2-4f4e-95e4-ed156ac46114",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b69b5383-8040-46f3-aacc-98e0f9d411a7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:03.427Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:03 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              165,
              216,
              173,
              216,
              181,
              216,
              167,
              216,
              166,
              217,
              138,
              216,
              167,
              216,
              170,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              73,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              115,
              34,
              58,
              52,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              67,
              104,
              97,
              116,
              80,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              51,
              50,
              48,
              44,
              34,
              116,
              111,
              116,
              97,
              108,
              86,
              111,
              105,
              99,
              101,
              80,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              49,
              54,
              48,
              44,
              34,
              97,
              118,
              101,
              114,
              97,
              103,
              101,
              67,
              104,
              97,
              116,
              76,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              46,
              53,
              44,
              34,
              97,
              118,
              101,
              114,
              97,
              103,
              101,
              86,
              111,
              105,
              99,
              101,
              76,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              46,
              53,
              44,
              34,
              109,
              97,
              120,
              67,
              104,
              97,
              116,
              76,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              109,
              97,
              120,
              86,
              111,
              105,
              99,
              101,
              76,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 38,
          "responseSize": 254
        },
        "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Stats data is returned",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Stats data is returned",
              "message": "expected { success: true, …(2) } to have property 'totalInteractions'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'totalInteractions'\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ea3c819d-24ed-4ddf-a3f3-72183a3362ec",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "11268da9-dd57-4d80-a8d2-e65fc3e9e18d"
        },
        "item": {
          "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
          "name": "Get Interaction by User and Guild",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aba71457-995c-4173-b55a-e9806975408d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Interaction data is returned', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user_id');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                  "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                  "});"
                ],
                "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772",
              "guild",
              "tg_1756217340772"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5c39a6ca-54fe-46ff-96d3-1168903d1cb3",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "cb676da9-64c6-45b3-aea9-ed07481c64c9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:04.033Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:04 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              53,
              100,
              99,
              50,
              56,
              98,
              52,
              45,
              54,
              98,
              57,
              57,
              45,
              52,
              50,
              99,
              55,
              45,
              98,
              55,
              97,
              53,
              45,
              49,
              51,
              99,
              99,
              100,
              52,
              51,
              98,
              101,
              57,
              48,
              48,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 163,
          "responseSize": 331
        },
        "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Interaction data is returned",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Interaction data is returned",
              "message": "expected { success: true, …(2) } to have property 'user_id'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'user_id'\n   at Object.eval sandbox-script.js:2:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "975a7c81-f427-4e88-ac9a-2a8306befeb1",
          "length": 18,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53fc600e-518a-4890-83f1-3bed11363c1a"
        },
        "item": {
          "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
          "name": "Get Interactions by User",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c6a3e26c-8f27-4645-98ca-5b18baf7cbad",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "39ecaaa2-d72d-4cb9-a116-74614b99792a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:04.771Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:05 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              216,
              179,
              216,
              170,
              216,
              174,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              53,
              100,
              99,
              50,
              56,
              98,
              52,
              45,
              54,
              98,
              57,
              57,
              45,
              52,
              50,
              99,
              55,
              45,
              98,
              55,
              97,
              53,
              45,
              49,
              51,
              99,
              99,
              100,
              52,
              51,
              98,
              101,
              57,
              48,
              48,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 414,
          "responseSize": 348
        },
        "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e1ec849f-65fc-4f76-bfef-4713d3f27aa0",
          "length": 18,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6cf10921-b4cf-4a70-bf66-a1371513df38"
        },
        "item": {
          "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
          "name": "Get Interactions by Guild",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "guild",
              "tg_1756217340772"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e0310520-5762-403a-8e84-e0f86604f1c9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "7f0f0d8b-d344-4c86-b419-512f958e0d0b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:05.747Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:06 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              216,
              167,
              217,
              132,
              216,
              174,
              216,
              167,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              100,
              53,
              100,
              99,
              50,
              56,
              98,
              52,
              45,
              54,
              98,
              57,
              57,
              45,
              52,
              50,
              99,
              55,
              45,
              98,
              55,
              97,
              53,
              45,
              49,
              51,
              99,
              99,
              100,
              52,
              51,
              98,
              101,
              57,
              48,
              48,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              55,
              51,
              52,
              48,
              55,
              55,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              49,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              52,
              58,
              48,
              57,
              58,
              48,
              50,
              46,
              50,
              51,
              56,
              90,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 467,
          "responseSize": 344
        },
        "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f2f40715-758c-4a09-9cd2-d00e3f26ec4b",
          "length": 18,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eaa88951-ef7e-4022-b541-1449b4a64f5c"
        },
        "item": {
          "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
          "name": "Get Interactions by Chat Level",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "chat-level",
                "{{min_chat_level}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "chat-level",
              "2"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c3ac71ba-6222-466f-90d4-4f302f9773ec",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "6cab902f-8962-42d4-881a-d71e4c90cb69",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:06.779Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:07 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              216,
              168,
              217,
              134,
              216,
              167,
              216,
              161,
              217,
              139,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              217,
              133,
              216,
              179,
              216,
              170,
              217,
              136,
              217,
              137,
              32,
              216,
              167,
              217,
              132,
              216,
              175,
              216,
              177,
              216,
              175,
              216,
              180,
              216,
              169,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              53,
              53,
              49,
              102,
              97,
              102,
              100,
              45,
              51,
              102,
              100,
              55,
              45,
              52,
              48,
              56,
              53,
              45,
              57,
              50,
              53,
              97,
              45,
              48,
              97,
              100,
              99,
              51,
              57,
              97,
              102,
              57,
              50,
              97,
              54,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              48,
              55,
              56,
              53,
              53,
              56,
              52,
              51,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              48,
              55,
              56,
              53,
              53,
              56,
              52,
              51,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              49,
              54,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              56,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              55,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              49,
              58,
              48,
              54,
              46,
              52,
              57,
              49,
              90,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              101,
              52,
              57,
              100,
              50,
              52,
              101,
              45,
              50,
              54,
              50,
              57,
              45,
              52,
              55,
              55,
              102,
              45,
              57,
              53,
              98,
              55,
              45,
              52,
              102,
              57,
              102,
              98,
              54,
              55,
              102,
              52,
              55,
              49,
              52,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              50,
              49,
              52,
              53,
              57,
              55,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              50,
              49,
              52,
              53,
              57,
              55,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              49,
              54,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              56,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              50,
              58,
              52,
              50,
              58,
              50,
              54,
              46,
              57,
              50,
              54,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              50,
              58,
              52,
              50,
              58,
              51,
              54,
              46,
              54,
              49,
              54,
              90,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 438,
          "responseSize": 632
        },
        "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "30d946ce-dd33-43f0-896d-8122f649cb1d",
          "length": 18,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d999cedc-3362-4ab0-a40a-5662c8ec0881"
        },
        "item": {
          "id": "693336fe-00f6-405d-a3de-4bff6a935096",
          "name": "Get Interactions by Voice Level",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "voice-level",
                "{{min_voice_level}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2036d83-70df-419c-be07-f286998e5973",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "voice-level",
              "2"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "be74cd86-ea34-4214-ab11-9533bd33ce16",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "0c5d38c3-a1a1-4647-97be-c5e74a5f96ba",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:07.791Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:08 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              216,
              168,
              217,
              134,
              216,
              167,
              216,
              161,
              217,
              139,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              217,
              133,
              216,
              179,
              216,
              170,
              217,
              136,
              217,
              137,
              32,
              216,
              167,
              217,
              132,
              216,
              181,
              217,
              136,
              216,
              170,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              53,
              53,
              49,
              102,
              97,
              102,
              100,
              45,
              51,
              102,
              100,
              55,
              45,
              52,
              48,
              56,
              53,
              45,
              57,
              50,
              53,
              97,
              45,
              48,
              97,
              100,
              99,
              51,
              57,
              97,
              102,
              57,
              50,
              97,
              54,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              48,
              55,
              56,
              53,
              53,
              56,
              52,
              51,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              48,
              55,
              56,
              53,
              53,
              56,
              52,
              51,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              49,
              54,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              56,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              55,
              57,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              49,
              58,
              48,
              54,
              46,
              52,
              57,
              49,
              90,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              98,
              101,
              52,
              57,
              100,
              50,
              52,
              101,
              45,
              50,
              54,
              50,
              57,
              45,
              52,
              55,
              55,
              102,
              45,
              57,
              53,
              98,
              55,
              45,
              52,
              102,
              57,
              102,
              98,
              54,
              55,
              102,
              52,
              55,
              49,
              52,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              50,
              49,
              52,
              53,
              57,
              55,
              50,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              49,
              55,
              53,
              54,
              50,
              49,
              50,
              49,
              52,
              53,
              57,
              55,
              50,
              34,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              49,
              54,
              48,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              34,
              58,
              56,
              48,
              44,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              34,
              58,
              50,
              44,
              34,
              99,
              114,
              101,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              50,
              58,
              52,
              50,
              58,
              50,
              54,
              46,
              57,
              50,
              54,
              90,
              34,
              44,
              34,
              117,
              112,
              100,
              97,
              116,
              101,
              100,
              65,
              116,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              50,
              58,
              52,
              50,
              58,
              51,
              54,
              46,
              54,
              49,
              54,
              90,
              34,
              125,
              93,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 441,
          "responseSize": 628
        },
        "id": "693336fe-00f6-405d-a3de-4bff6a935096",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "8e1ea972-b5fe-4b6d-aa20-7d4d3b9b2daf",
          "length": 18,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2b6ee141-1ab0-40b7-951e-84ee8d12d3eb"
        },
        "item": {
          "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
          "name": "Update Interaction",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Interaction updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson.chat_points).to.equal(100);",
                  "    pm.expect(responseJson.voice_points).to.equal(50);",
                  "});"
                ],
                "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772",
              "guild",
              "tg_1756217340772"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "07657406-7b3a-419f-be96-0be487e862bd",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "68",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
          }
        },
        "response": {
          "id": "3884e3fc-e56b-4ada-951e-ed035bc2d06f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:08.786Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:08 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              170,
              216,
              173,
              216,
              175,
              217,
              138,
              216,
              171,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              82,
              111,
              119,
              115,
              34,
              58,
              49,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 76,
          "responseSize": 104
        },
        "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Interaction updated successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Interaction updated successfully",
              "message": "expected { success: true, …(2) } to have property 'chat_points'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'chat_points'\n   at Object.eval sandbox-script.js:2:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "984e3b1e-4c4c-41e9-a622-f0a4ffb62160",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cb74cdfb-09bf-47b9-b948-9ae9610061d1"
        },
        "item": {
          "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
          "name": "Update Chat Points",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}",
                "chat-points"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\"points\":150}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Chat points updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson.chat_points).to.equal(150);",
                  "});"
                ],
                "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772",
              "guild",
              "tg_1756217340772",
              "chat-points"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b2eb948a-8805-4f1a-a760-6dc2d3e2ebca",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "14",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\"points\":150}"
          }
        },
        "response": {
          "id": "3165ea63-f701-46da-aea3-08f64f1b7c50",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:09.401Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:09 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              170,
              216,
              173,
              216,
              175,
              217,
              138,
              216,
              171,
              32,
              217,
              134,
              217,
              130,
              216,
              167,
              216,
              183,
              32,
              216,
              167,
              217,
              132,
              216,
              175,
              216,
              177,
              216,
              175,
              216,
              180,
              216,
              169,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              82,
              111,
              119,
              115,
              34,
              58,
              49,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 36,
          "responseSize": 113
        },
        "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Chat points updated successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Chat points updated successfully",
              "message": "expected { success: true, …(2) } to have property 'chat_points'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'chat_points'\n   at Object.eval sandbox-script.js:2:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "99e1c2cb-86ae-4350-91ff-8f95388de195",
          "length": 18,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ceb33b4b-3d9d-4734-ab2a-c60a8e99344c"
        },
        "item": {
          "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
          "name": "Update Voice Points",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}",
                "voice-points"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\"points\":75}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Voice points updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson.voice_points).to.equal(75);",
                  "});"
                ],
                "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772",
              "guild",
              "tg_1756217340772",
              "voice-points"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5ef28a68-b328-4bfe-955c-aba9d0ed3c8f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "13",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\"points\":75}"
          }
        },
        "response": {
          "id": "f116ce6f-80d1-4a00-88fd-be59ffad2fd5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:09.990Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              170,
              216,
              173,
              216,
              175,
              217,
              138,
              216,
              171,
              32,
              217,
              134,
              217,
              130,
              216,
              167,
              216,
              183,
              32,
              216,
              167,
              217,
              132,
              216,
              181,
              217,
              136,
              216,
              170,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              82,
              111,
              119,
              115,
              34,
              58,
              49,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 265,
          "responseSize": 109
        },
        "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Voice points updated successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Voice points updated successfully",
              "message": "expected { success: true, …(2) } to have property 'voice_points'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'voice_points'\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d1476e6e-54c9-41d0-87e9-e53383ec608d",
          "length": 18,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "213b96df-2bfd-4faf-bf62-74b4b972d693"
        },
        "item": {
          "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
          "name": "Increment Chat Points",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}",
                "increment-chat"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\"increment\":10}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Chat points incremented successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson.chat_points).to.be.above(150);",
                  "});"
                ],
                "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772",
              "guild",
              "tg_1756217340772",
              "increment-chat"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "18e9c87c-1b3f-46c7-89e5-cb358b7dd2d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "16",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\"increment\":10}"
          }
        },
        "response": {
          "id": "ffeab475-cbe8-4310-95f1-7fde1636e5b8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:10.800Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:11 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              178,
              217,
              138,
              216,
              167,
              216,
              175,
              216,
              169,
              32,
              217,
              134,
              217,
              130,
              216,
              167,
              216,
              183,
              32,
              216,
              167,
              217,
              132,
              216,
              175,
              216,
              177,
              216,
              175,
              216,
              180,
              216,
              169,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              82,
              111,
              119,
              115,
              34,
              58,
              49,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 471,
          "responseSize": 113
        },
        "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Chat points incremented successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Chat points incremented successfully",
              "message": "expected { success: true, …(2) } to have property 'chat_points'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'chat_points'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "ae93e337-d844-435d-a221-6fd192a44158",
          "length": 18,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2e0f847d-40c2-40da-9c0d-2004386db079"
        },
        "item": {
          "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
          "name": "Increment Voice Points",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}",
                "increment-voice"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\"increment\":5}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Voice points incremented successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson.voice_points).to.be.above(75);",
                  "});"
                ],
                "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772",
              "guild",
              "tg_1756217340772",
              "increment-voice"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a91a4302-54d9-4a67-82d7-0ce2b61166a8",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "15",
              "system": true
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "{\"increment\":5}"
          }
        },
        "response": {
          "id": "e005f708-b33b-4bcb-bd72-58f7d81fc965",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:11.816Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:12 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              178,
              217,
              138,
              216,
              167,
              216,
              175,
              216,
              169,
              32,
              217,
              134,
              217,
              130,
              216,
              167,
              216,
              183,
              32,
              216,
              167,
              217,
              132,
              216,
              181,
              217,
              136,
              216,
              170,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              82,
              111,
              119,
              115,
              34,
              58,
              49,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 454,
          "responseSize": 109
        },
        "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Voice points incremented successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Voice points incremented successfully",
              "message": "expected { success: true, …(2) } to have property 'voice_points'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'voice_points'\n   at Object.eval sandbox-script.js:2:13)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "af3d03c0-b6cf-45aa-afbd-5412bad73625",
          "length": 18,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5abaf318-d1a2-4952-972b-01b540d1ff14"
        },
        "item": {
          "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
          "name": "Create Interaction with Invalid Data",
          "request": {
            "url": {
              "path": [
                "serversInteractions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Validation error is returned', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('error');",
                  "});"
                ],
                "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "faaaee05-0923-412f-b951-b6f52755cf60",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "95",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
          }
        },
        "response": {
          "id": "64b86d5b-9bf7-41b9-acb5-81c9c5bb7c80",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:12.796Z"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2852"
            },
            {
              "key": "ETag",
              "value": "W/\"b24-QNeCGMOKVI68C2U++jQIpKNenFA\""
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:12 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              92,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              92,
              34,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              103,
              114,
              101,
              97,
              116,
              101,
              114,
              32,
              116,
              104,
              97,
              110,
              32,
              111,
              114,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              48,
              44,
              32,
              92,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              92,
              34,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              103,
              114,
              101,
              97,
              116,
              101,
              114,
              32,
              116,
              104,
              97,
              110,
              32,
              111,
              114,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              48,
              44,
              32,
              92,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              92,
              34,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              103,
              114,
              101,
              97,
              116,
              101,
              114,
              32,
              116,
              104,
              97,
              110,
              32,
              111,
              114,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              49,
              44,
              32,
              92,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              92,
              34,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              103,
              114,
              101,
              97,
              116,
              101,
              114,
              32,
              116,
              104,
              97,
              110,
              32,
              111,
              114,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              49,
              34,
              44,
              34,
              115,
              116,
              97,
              99,
              107,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              58,
              32,
              92,
              34,
              117,
              115,
              101,
              114,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              92,
              34,
              32,
              105,
              115,
              32,
              110,
              111,
              116,
              32,
              97,
              108,
              108,
              111,
              119,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              101,
              109,
              112,
              116,
              121,
              44,
              32,
              92,
              34,
              99,
              104,
              97,
              116,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              92,
              34,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              103,
              114,
              101,
              97,
              116,
              101,
              114,
              32,
              116,
              104,
              97,
              110,
              32,
              111,
              114,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              48,
              44,
              32,
              92,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              112,
              111,
              105,
              110,
              116,
              115,
              92,
              34,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              103,
              114,
              101,
              97,
              116,
              101,
              114,
              32,
              116,
              104,
              97,
              110,
              32,
              111,
              114,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              48,
              44,
              32,
              92,
              34,
              99,
              104,
              97,
              116,
              95,
              108,
              101,
              118,
              101,
              108,
              92,
              34,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              103,
              114,
              101,
              97,
              116,
              101,
              114,
              32,
              116,
              104,
              97,
              110,
              32,
              111,
              114,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              49,
              44,
              32,
              92,
              34,
              118,
              111,
              105,
              99,
              101,
              95,
              108,
              101,
              118,
              101,
              108,
              92,
              34,
              32,
              109,
              117,
              115,
              116,
              32,
              98,
              101,
              32,
              103,
              114,
              101,
              97,
              116,
              101,
              114,
              32,
              116,
              104,
              97,
              110,
              32,
              111,
              114,
              32,
              101,
              113,
              117,
              97,
              108,
              32,
              116,
              111,
              32,
              49,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              77,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              32,
              40,
              102,
              105,
              108,
              101,
              58,
              47,
              47,
              47,
              67,
              58,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              109,
              111,
              104,
              97,
              109,
              47,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              47,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              47,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              47,
              115,
              114,
              99,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              115,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              46,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              46,
              106,
              115,
              58,
              52,
              48,
              58,
              50,
              49,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              102,
              105,
              108,
              101,
              58,
              47,
              47,
              47,
              67,
              58,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              109,
              111,
              104,
              97,
              109,
              47,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              47,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              47,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              47,
              115,
              114,
              99,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              115,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              46,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              46,
              106,
              115,
              58,
              55,
              49,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              46,
              106,
              115,
              58,
              49,
              52,
              57,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              82,
              111,
              117,
              116,
              101,
              46,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              46,
              106,
              115,
              58,
              49,
              49,
              57,
              58,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              52,
              58,
              49,
              53,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              49,
              55,
              53,
              58,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              114,
              111,
              117,
              116,
              101,
              114,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              52,
              55,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              116,
              114,
              105,
              109,
              95,
              112,
              114,
              101,
              102,
              105,
              120,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              50,
              56,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              54,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              115,
              101,
              114,
              118,
              101,
              114,
              115,
              73,
              110,
              116,
              101,
              114,
              97,
              99,
              116,
              105,
              111,
              110,
              115,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              80,
              79,
              83,
              84,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 30,
          "responseSize": 2852
        },
        "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Validation error is returned",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5e6ffba6-faaa-4385-ae39-26701605e0d0",
          "length": 18,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "17b3841f-4edc-440c-be26-4eff8030ecf2"
        },
        "item": {
          "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
          "name": "Delete Interaction",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200 or 204', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                  "});",
                  "",
                  "pm.test('Interaction deleted successfully', function () {",
                  "    if (pm.response.code === 200) {",
                  "        const responseJson = pm.response.json();",
                  "        pm.expect(responseJson).to.have.property('message');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772",
              "guild",
              "tg_1756217340772"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a14c315e-f4e1-4bfc-a69e-b58da44505af",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "4a995993-48a8-4b6e-945b-5748953ddcbd",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:13.390Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:13 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              173,
              216,
              176,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 82,
          "responseSize": 66
        },
        "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
        "assertions": [
          {
            "assertion": "Status code is 200 or 204",
            "skipped": false
          },
          {
            "assertion": "Interaction deleted successfully",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ea3ca594-acc2-4ea9-9dc6-eadf04b32fae",
          "length": 18,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a0d32ed8-04c1-4966-845a-f2cf4583b3d8"
        },
        "item": {
          "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
          "name": "Delete All User Interactions",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id_2}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200 or 204', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                  "});",
                  "",
                  "pm.test('User interactions deleted successfully', function () {",
                  "    if (pm.response.code === 200) {",
                  "        const responseJson = pm.response.json();",
                  "        pm.expect(responseJson).to.have.property('message');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu2_1756217340772"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "32da6292-09b3-4a45-a7ce-892044b68a37",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "5e2f40cf-98a8-4339-ac4c-af16f6673cc3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:14.023Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:14 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              173,
              216,
              176,
              217,
              129,
              32,
              216,
              172,
              217,
              133,
              217,
              138,
              216,
              185,
              32,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              216,
              179,
              216,
              170,
              216,
              174,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 36,
          "responseSize": 92
        },
        "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
        "assertions": [
          {
            "assertion": "Status code is 200 or 204",
            "skipped": false
          },
          {
            "assertion": "User interactions deleted successfully",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "26a24f89-5460-44fa-a548-f49679a1fe2c",
          "length": 18,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "285c3ae6-e600-4b15-ade8-90665c55942e"
        },
        "item": {
          "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
          "name": "Delete All Guild Interactions",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "guild",
                "{{test_guild_id_2}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200 or 204', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                  "});",
                  "",
                  "pm.test('Guild interactions deleted successfully', function () {",
                  "    if (pm.response.code === 200) {",
                  "        const responseJson = pm.response.json();",
                  "        pm.expect(responseJson).to.have.property('message');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "guild",
              "tg2_1756217340772"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "3060f1a7-3f1e-4f3b-9117-a22b98f67cb7",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "432f7a52-a1c0-498c-b52a-0c809e691f3b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:14.604Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:14 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              173,
              216,
              176,
              217,
              129,
              32,
              216,
              172,
              217,
              133,
              217,
              138,
              216,
              185,
              32,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              216,
              167,
              217,
              132,
              216,
              174,
              216,
              167,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 44,
          "responseSize": 88
        },
        "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
        "assertions": [
          {
            "assertion": "Status code is 200 or 204",
            "skipped": false
          },
          {
            "assertion": "Guild interactions deleted successfully",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "3156fddd-f02b-4a4e-a97d-a9e612f6c1cf",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dfc875c8-14dc-4a02-978b-ffd52745165f"
        },
        "item": {
          "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
          "name": "Get Deleted Interaction (Should Fail)",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message is returned', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('error');",
                  "});"
                ],
                "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "serversInteractions",
              "user",
              "tu_1756217340772",
              "guild",
              "tg_1756217340772"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9c56f45f-5a87-4d46-b3a3-d6df84ddfdc7",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "2c755e2a-f7d5-4acb-b67c-b08b13296ae9",
          "status": "Internal Server Error",
          "code": 500,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:15.191Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:15 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              217,
              129,
              216,
              180,
              217,
              132,
              32,
              217,
              129,
              217,
              138,
              32,
              216,
              172,
              217,
              132,
              216,
              168,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              217,
              129,
              216,
              167,
              216,
              185,
              217,
              132,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              34,
              67,
              97,
              110,
              110,
              111,
              116,
              32,
              114,
              101,
              97,
              100,
              32,
              112,
              114,
              111,
              112,
              101,
              114,
              116,
              105,
              101,
              115,
              32,
              111,
              102,
              32,
              110,
              117,
              108,
              108,
              32,
              40,
              114,
              101,
              97,
              100,
              105,
              110,
              103,
              32,
              39,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              39,
              41,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 102,
          "responseSize": 133
        },
        "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:18)"
            }
          },
          {
            "assertion": "Error message is returned",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Error message is returned",
              "message": "expected { success: true, …(2) } to have property 'error'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'error'\n   at Object.eval sandbox-script.js:2:18)"
            }
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 7822
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Interaction created successfully",
          "message": "expected { success: true, …(2) } to have property 'user_id'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'user_id'\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "ff200bacb95367471e4d295cfd720c72",
          "id": "28384807-a37b-4c95-ad9e-9a63506d9b44",
          "timestamp": 1756217342301,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "c279683d-335e-4547-8610-10d8f25a8863",
          "name": "Create Interaction",
          "request": {
            "url": {
              "path": [
                "serversInteractions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Interaction created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user_id');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson).to.have.property('chat_level');",
                  "    pm.expect(responseJson).to.have.property('voice_level');",
                  "});",
                  "",
                  "pm.test('Default values are correct', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.chat_points).to.equal(0);",
                  "    pm.expect(responseJson.voice_points).to.equal(0);",
                  "    pm.expect(responseJson.chat_level).to.equal(1);",
                  "    pm.expect(responseJson.voice_level).to.equal(1);",
                  "});"
                ],
                "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 18,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9dd74253-a87a-4a88-8844-d13883580008",
          "httpRequestId": "911ae11c-99c2-44ef-a2e3-db1b85fbe011",
          "scriptId": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
          "execution": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Default values are correct",
          "message": "expected undefined to equal +0",
          "stack": "AssertionError: expected undefined to equal +0\n   at Object.eval sandbox-script.js:3:1)",
          "checksum": "0077a92d05e633abd42eb85d5cd63a64",
          "id": "603c4046-8fb8-41c5-ad00-36f21ae68d3c",
          "timestamp": 1756217342302,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "c279683d-335e-4547-8610-10d8f25a8863",
          "name": "Create Interaction",
          "request": {
            "url": {
              "path": [
                "serversInteractions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Interaction created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user_id');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson).to.have.property('chat_level');",
                  "    pm.expect(responseJson).to.have.property('voice_level');",
                  "});",
                  "",
                  "pm.test('Default values are correct', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.chat_points).to.equal(0);",
                  "    pm.expect(responseJson.voice_points).to.equal(0);",
                  "    pm.expect(responseJson.chat_level).to.equal(1);",
                  "    pm.expect(responseJson.voice_level).to.equal(1);",
                  "});"
                ],
                "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 18,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9dd74253-a87a-4a88-8844-d13883580008",
          "httpRequestId": "911ae11c-99c2-44ef-a2e3-db1b85fbe011",
          "scriptId": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
          "execution": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "ff13c0eac9917baf6d853ec65a767683",
          "id": "79f07c50-a730-4236-b47f-e3a08aca2a30",
          "timestamp": 1756217342889,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
          "name": "Get All Interactions",
          "request": {
            "url": {
              "path": [
                "serversInteractions"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d3188de5-37ed-451b-a56b-6b14addddc0d",
          "length": 18,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "53a012b3-56b0-477a-a58d-23a71a2036ec",
          "scriptId": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
          "execution": "73643951-d496-4ef6-86de-a12bb5f940cc"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Stats data is returned",
          "message": "expected { success: true, …(2) } to have property 'totalInteractions'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'totalInteractions'\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "cdc477d4e2bf32ba2f0794ff2229ed18",
          "id": "6a446f3b-3120-4c8f-92f1-173ec98b7089",
          "timestamp": 1756217343483,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
          "name": "Get Interaction Stats",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "stats"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats data is returned', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('totalInteractions');",
                  "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                  "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                  "});"
                ],
                "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e88668ce-da5c-402c-8d20-2b2b7295cf00",
          "length": 18,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "e829e0a7-edc2-46ec-adb2-bc3df0e5138e",
          "scriptId": "f4aff53d-50db-440f-b134-44b9e70956fb",
          "execution": "63f7ab75-598a-4f5a-80ac-cd420545d029"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Interaction data is returned",
          "message": "expected { success: true, …(2) } to have property 'user_id'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'user_id'\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "e211d080f340316ff3716103f7bd7f08",
          "id": "7345d8e8-62ea-4328-8908-c0f48fe4cf5b",
          "timestamp": 1756217344224,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
          "name": "Get Interaction by User and Guild",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aba71457-995c-4173-b55a-e9806975408d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Interaction data is returned', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('user_id');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                  "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                  "});"
                ],
                "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ea3c819d-24ed-4ddf-a3f3-72183a3362ec",
          "length": 18,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "11268da9-dd57-4d80-a8d2-e65fc3e9e18d",
          "scriptId": "aba71457-995c-4173-b55a-e9806975408d",
          "execution": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "9d59931dcdb9490e09004521d65b322e",
          "id": "6a65aeb9-0651-41d3-adcf-6bfdc123c336",
          "timestamp": 1756217345189,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
          "name": "Get Interactions by User",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "975a7c81-f427-4e88-ac9a-2a8306befeb1",
          "length": 18,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "53fc600e-518a-4890-83f1-3bed11363c1a",
          "scriptId": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
          "execution": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:6)",
          "checksum": "92c21ce6ff00b5a10304091cf97d76f5",
          "id": "df697924-bb50-4b80-8248-f1c112d41fdc",
          "timestamp": 1756217346219,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
          "name": "Get Interactions by Guild",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e1ec849f-65fc-4f76-bfef-4713d3f27aa0",
          "length": 18,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6cf10921-b4cf-4a70-bf66-a1371513df38",
          "scriptId": "61304560-9d51-43a6-bc0e-5e750accc61e",
          "execution": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:7)",
          "checksum": "a43907d35a307e8d2085353d5b7eeb03",
          "id": "8d93c437-b409-4897-aa5d-42b94adf8617",
          "timestamp": 1756217347239,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
          "name": "Get Interactions by Chat Level",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "chat-level",
                "{{min_chat_level}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f2f40715-758c-4a09-9cd2-d00e3f26ec4b",
          "length": 18,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "eaa88951-ef7e-4022-b541-1449b4a64f5c",
          "scriptId": "d64ebee6-1320-431c-afaf-d8a105814410",
          "execution": "461dc172-9d9c-4577-be6a-7395d104b8df"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:8)",
          "checksum": "00b279d2899a0b08114aab1f5309ebd5",
          "id": "09141049-75c1-402a-a70a-634b48d3c179",
          "timestamp": 1756217348240,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "693336fe-00f6-405d-a3de-4bff6a935096",
          "name": "Get Interactions by Voice Level",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "voice-level",
                "{{min_voice_level}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a2036d83-70df-419c-be07-f286998e5973",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "30d946ce-dd33-43f0-896d-8122f649cb1d",
          "length": 18,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d999cedc-3362-4ab0-a40a-5662c8ec0881",
          "scriptId": "a2036d83-70df-419c-be07-f286998e5973",
          "execution": "1850213b-3e45-464c-8d5c-0434d666a87c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Interaction updated successfully",
          "message": "expected { success: true, …(2) } to have property 'chat_points'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'chat_points'\n   at Object.eval sandbox-script.js:2:9)",
          "checksum": "6c4c85b49edbab437373d566d9c2744b",
          "id": "562ed5c7-7a0a-401d-b4fd-6d790131e857",
          "timestamp": 1756217348871,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
          "name": "Update Interaction",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Interaction updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson.chat_points).to.equal(100);",
                  "    pm.expect(responseJson.voice_points).to.equal(50);",
                  "});"
                ],
                "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "8e1ea972-b5fe-4b6d-aa20-7d4d3b9b2daf",
          "length": 18,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2b6ee141-1ab0-40b7-951e-84ee8d12d3eb",
          "scriptId": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
          "execution": "8157b9af-6607-4429-8d97-edce1a312159"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Chat points updated successfully",
          "message": "expected { success: true, …(2) } to have property 'chat_points'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'chat_points'\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "0077ce66340bb5ee9ca82e7122f55726",
          "id": "f0539239-b815-489a-8491-4634cb3f453d",
          "timestamp": 1756217349442,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
          "name": "Update Chat Points",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}",
                "chat-points"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\"points\":150}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Chat points updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson.chat_points).to.equal(150);",
                  "});"
                ],
                "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "984e3b1e-4c4c-41e9-a622-f0a4ffb62160",
          "length": 18,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "cb74cdfb-09bf-47b9-b948-9ae9610061d1",
          "scriptId": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
          "execution": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Voice points updated successfully",
          "message": "expected { success: true, …(2) } to have property 'voice_points'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'voice_points'\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "59f0bc67e983673cd90929445a408818",
          "id": "ae0c7af9-39be-4049-823c-cbe7ab3d2318",
          "timestamp": 1756217350263,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
          "name": "Update Voice Points",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}",
                "voice-points"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\"points\":75}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Voice points updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson.voice_points).to.equal(75);",
                  "});"
                ],
                "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "99e1c2cb-86ae-4350-91ff-8f95388de195",
          "length": 18,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ceb33b4b-3d9d-4734-ab2a-c60a8e99344c",
          "scriptId": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
          "execution": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Chat points incremented successfully",
          "message": "expected { success: true, …(2) } to have property 'chat_points'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'chat_points'\n   at Object.eval sandbox-script.js:2:12)",
          "checksum": "34a6b7311e782d8ffd04ec1de96b965e",
          "id": "4b42640d-283d-45a9-876c-abeae143b069",
          "timestamp": 1756217351278,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
          "name": "Increment Chat Points",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}",
                "increment-chat"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\"increment\":10}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Chat points incremented successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('chat_points');",
                  "    pm.expect(responseJson.chat_points).to.be.above(150);",
                  "});"
                ],
                "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d1476e6e-54c9-41d0-87e9-e53383ec608d",
          "length": 18,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "213b96df-2bfd-4faf-bf62-74b4b972d693",
          "scriptId": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
          "execution": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Voice points incremented successfully",
          "message": "expected { success: true, …(2) } to have property 'voice_points'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'voice_points'\n   at Object.eval sandbox-script.js:2:13)",
          "checksum": "e81465987e71f2d190669fd665c42476",
          "id": "5770c99d-f25c-4d0a-88e8-5a06f6499908",
          "timestamp": 1756217352276,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
          "name": "Increment Voice Points",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}",
                "increment-voice"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "{\"increment\":5}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Voice points incremented successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('voice_points');",
                  "    pm.expect(responseJson.voice_points).to.be.above(75);",
                  "});"
                ],
                "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "ae93e337-d844-435d-a221-6fd192a44158",
          "length": 18,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2e0f847d-40c2-40da-9c0d-2004386db079",
          "scriptId": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
          "execution": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 404",
          "message": "expected response to have status code 404 but got 500",
          "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:18)",
          "checksum": "742b837bde78e7a45899fa6a1abb2ad8",
          "id": "df5fab47-1372-482d-833e-2e394b8d1198",
          "timestamp": 1756217355300,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
          "name": "Get Deleted Interaction (Should Fail)",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message is returned', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('error');",
                  "});"
                ],
                "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "3156fddd-f02b-4a4e-a97d-a9e612f6c1cf",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dfc875c8-14dc-4a02-978b-ffd52745165f",
          "scriptId": "def463f9-41f2-4959-a547-d4adeda3608c",
          "execution": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Error message is returned",
          "message": "expected { success: true, …(2) } to have property 'error'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'error'\n   at Object.eval sandbox-script.js:2:18)",
          "checksum": "5b5c1a940f71f8880ee83c7938aff3a2",
          "id": "745980ae-a00a-4d4d-85d7-46634e5bbc0e",
          "timestamp": 1756217355301,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 18,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
          "name": "Get Deleted Interaction (Should Fail)",
          "request": {
            "url": {
              "path": [
                "serversInteractions",
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message is returned', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('error');",
                  "});"
                ],
                "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "serversinteractions-api-tests"
          },
          "item": [
            {
              "id": "c279683d-335e-4547-8610-10d8f25a8863",
              "name": "Create Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"chat_points\":0,\"voice_points\":0,\"chat_level\":1,\"voice_level\":1}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "c3caa822-85f0-4a88-94e2-08b1c82ec6a0",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('Interaction created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson).to.have.property('chat_level');",
                      "    pm.expect(responseJson).to.have.property('voice_level');",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.chat_points).to.equal(0);",
                      "    pm.expect(responseJson.voice_points).to.equal(0);",
                      "    pm.expect(responseJson.chat_level).to.equal(1);",
                      "    pm.expect(responseJson.voice_level).to.equal(1);",
                      "});"
                    ],
                    "_lastExecutionId": "f2a8e2f3-1f22-45ee-b8da-623020b38b16"
                  }
                }
              ]
            },
            {
              "id": "44bc6abc-d8f1-419b-9591-c4fcfd4ad43f",
              "name": "Get All Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b02dccd0-6d11-414d-8cad-433a53dc7c01",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "73643951-d496-4ef6-86de-a12bb5f940cc"
                  }
                }
              ]
            },
            {
              "id": "eca9f292-2859-40ed-b1cc-7a4f96478bc9",
              "name": "Get Interaction Stats",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "f4aff53d-50db-440f-b134-44b9e70956fb",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalInteractions');",
                      "    pm.expect(responseJson).to.have.property('totalChatPoints');",
                      "    pm.expect(responseJson).to.have.property('totalVoicePoints');",
                      "});"
                    ],
                    "_lastExecutionId": "63f7ab75-598a-4f5a-80ac-cd420545d029"
                  }
                }
              ]
            },
            {
              "id": "59c36a99-5ceb-48e1-a309-5667b7c50273",
              "name": "Get Interaction by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aba71457-995c-4173-b55a-e9806975408d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction data is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('user_id');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.user_id).to.equal(pm.variables.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.equal(pm.variables.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "ce001b33-e458-4fb5-91a3-4e7cc7ec7360"
                  }
                }
              ]
            },
            {
              "id": "8aa39944-8753-4ba2-b67e-4689555dd9ff",
              "name": "Get Interactions by User",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a4e8ef0-4e1b-42f2-b043-fe2052cfbf05",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b2f5f223-9f4a-43a8-892e-86dfd13de017"
                  }
                }
              ]
            },
            {
              "id": "83fd42ce-2dc4-46ce-95b9-ba1322e28b4c",
              "name": "Get Interactions by Guild",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "61304560-9d51-43a6-bc0e-5e750accc61e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "0a07e22d-a581-40e6-af39-f5c69ff9969b"
                  }
                }
              ]
            },
            {
              "id": "ec641f2f-f21c-45c4-98c7-0127b64f511c",
              "name": "Get Interactions by Chat Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "chat-level",
                    "{{min_chat_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "d64ebee6-1320-431c-afaf-d8a105814410",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "461dc172-9d9c-4577-be6a-7395d104b8df"
                  }
                }
              ]
            },
            {
              "id": "693336fe-00f6-405d-a3de-4bff6a935096",
              "name": "Get Interactions by Voice Level",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "voice-level",
                    "{{min_voice_level}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a2036d83-70df-419c-be07-f286998e5973",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "1850213b-3e45-464c-8d5c-0434d666a87c"
                  }
                }
              ]
            },
            {
              "id": "4ec23c23-2bbf-4f2b-b43b-a8109805b620",
              "name": "Update Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"chat_points\":100,\"voice_points\":50,\"chat_level\":2,\"voice_level\":2}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "6f3d2abe-49fe-450e-b652-fdfe31e9f972",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Interaction updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(100);",
                      "    pm.expect(responseJson.voice_points).to.equal(50);",
                      "});"
                    ],
                    "_lastExecutionId": "8157b9af-6607-4429-8d97-edce1a312159"
                  }
                }
              ]
            },
            {
              "id": "f5bd1c60-97b6-4f04-ae49-4c7385a56359",
              "name": "Update Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "chat-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":150}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ee29920-4e7d-452b-9d36-7970ffdaa070",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.equal(150);",
                      "});"
                    ],
                    "_lastExecutionId": "8a31dd83-aab2-4c0b-be9b-5a3fef6bc692"
                  }
                }
              ]
            },
            {
              "id": "e1030cf6-54e7-479e-8999-2bfd03cc4cca",
              "name": "Update Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "voice-points"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"points\":75}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "86b17692-2b02-4bf0-ae6b-fa01e3aeee7a",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.equal(75);",
                      "});"
                    ],
                    "_lastExecutionId": "55fc43f8-3fd8-4b7e-befb-837899a06e80"
                  }
                }
              ]
            },
            {
              "id": "5a4eeee7-05bd-477d-b482-26c5ab9b354c",
              "name": "Increment Chat Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-chat"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":10}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "0252c39f-b789-4eb5-b945-e1cd03a0f4d8",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Chat points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('chat_points');",
                      "    pm.expect(responseJson.chat_points).to.be.above(150);",
                      "});"
                    ],
                    "_lastExecutionId": "210ed47a-3892-4a2a-b5e8-d77d3348f8bc"
                  }
                }
              ]
            },
            {
              "id": "89ba6fb2-ccbc-4135-9a7a-4fa24600daa9",
              "name": "Increment Voice Points",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}",
                    "increment-voice"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PATCH",
                "body": {
                  "mode": "raw",
                  "raw": "{\"increment\":5}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ee63c33a-f2bd-4be6-a020-b50462c127b5",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Voice points incremented successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('voice_points');",
                      "    pm.expect(responseJson.voice_points).to.be.above(75);",
                      "});"
                    ],
                    "_lastExecutionId": "1b53f1ed-6e6c-4fc5-bc11-9f7cf1a6b9f0"
                  }
                }
              ]
            },
            {
              "id": "5e0d81ec-25f6-4e61-825c-c11d735861ae",
              "name": "Create Interaction with Invalid Data",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"user_id\":\"\",\"guild_id\":\"\",\"chat_points\":-10,\"voice_points\":-5,\"chat_level\":0,\"voice_level\":0}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4021bbe7-bc81-4b61-a0e9-b30746578f41",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Validation error is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "e816f6e1-7c2e-47b2-b208-b922d306e0b3"
                  }
                }
              ]
            },
            {
              "id": "9a0d7286-682a-448e-b1ea-bc770a79c952",
              "name": "Delete Interaction",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2c104fbe-39fa-470a-a02d-6bfd9c75687e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Interaction deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "b38c1816-6a41-491e-929f-e49a8e339454"
                  }
                }
              ]
            },
            {
              "id": "fe82112e-54ad-4879-a8e4-7f18fd0bf490",
              "name": "Delete All User Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e502ada6-e6b9-412b-bbe5-b98cf7d0ef87",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('User interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "c2d98de3-a4f5-44d6-ae7b-57e39c46fb53"
                  }
                }
              ]
            },
            {
              "id": "d2738efa-88cd-4b81-8701-a3efcec84e18",
              "name": "Delete All Guild Interactions",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "48c699ae-cce2-46cc-be29-1d97891c5734",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200 or 204', function () {",
                      "    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
                      "});",
                      "",
                      "pm.test('Guild interactions deleted successfully', function () {",
                      "    if (pm.response.code === 200) {",
                      "        const responseJson = pm.response.json();",
                      "        pm.expect(responseJson).to.have.property('message');",
                      "    }",
                      "});"
                    ],
                    "_lastExecutionId": "24bbb226-800e-4881-a703-971531e6d885"
                  }
                }
              ]
            },
            {
              "id": "9d5b6105-e014-4c79-bfa9-160a641f15b5",
              "name": "Get Deleted Interaction (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "serversInteractions",
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "def463f9-41f2-4959-a547-d4adeda3608c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message is returned', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('error');",
                      "});"
                    ],
                    "_lastExecutionId": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "serversinteractions-api-tests",
            "name": "ServersInteractions API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات تفاعلات الخوادم",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "3156fddd-f02b-4a4e-a97d-a9e612f6c1cf",
          "length": 18,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "dfc875c8-14dc-4a02-978b-ffd52745165f",
          "scriptId": "def463f9-41f2-4959-a547-d4adeda3608c",
          "execution": "2d4e0fd1-2b80-4c5a-994f-5e735630c52a"
        }
      }
    ],
    "error": null
  }
}