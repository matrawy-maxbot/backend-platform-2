{
  "collection": {
    "_": {
      "postman_id": "verifydur-api-tests"
    },
    "item": [
      {
        "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
        "name": "Create VerifyDur",
        "request": {
          "url": {
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "b15749c6-6993-41d8-81a4-6ae087407908",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 201', function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test('VerifyDur created successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('id');",
                "    pm.expect(responseJson).to.have.property('userId');",
                "    pm.expect(responseJson).to.have.property('guild_id');",
                "    pm.expect(responseJson).to.have.property('duration');",
                "    pm.expect(responseJson).to.have.property('TimeStamp');",
                "    ",
                "    // Store the created ID for later tests",
                "    pm.environment.set('verifyDurId', responseJson.id);",
                "});",
                "",
                "pm.test('Default values are correct', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson.duration).to.eql('1h');",
                "});"
              ],
              "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
            }
          }
        ]
      },
      {
        "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
        "name": "Create User VerifyDur",
        "request": {
          "url": {
            "path": [
              "user"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 201', function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test('User VerifyDur created successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('id');",
                "    pm.expect(responseJson).to.have.property('userId');",
                "    pm.expect(responseJson).to.have.property('guild_id');",
                "    pm.expect(responseJson).to.have.property('duration');",
                "});"
              ],
              "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
            }
          }
        ]
      },
      {
        "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
        "name": "Get All VerifyDur",
        "request": {
          "url": {
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
            }
          }
        ]
      },
      {
        "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
        "name": "Get VerifyDur Stats",
        "request": {
          "url": {
            "path": [
              "stats"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Stats response has required properties', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('totalRecords');",
                "    pm.expect(responseJson).to.have.property('activeRecords');",
                "    pm.expect(responseJson).to.have.property('expiredRecords');",
                "});"
              ],
              "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
            }
          }
        ]
      },
      {
        "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
        "name": "Get VerifyDur by ID",
        "request": {
          "url": {
            "path": [
              "{{verifyDurId}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('VerifyDur found successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('id');",
                "    pm.expect(responseJson).to.have.property('userId');",
                "    pm.expect(responseJson).to.have.property('guild_id');",
                "});"
              ],
              "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
            }
          }
        ]
      },
      {
        "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
        "name": "Get VerifyDur by User and Guild",
        "request": {
          "url": {
            "path": [
              "user",
              "{{test_user_id}}",
              "guild",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('VerifyDur found for user and guild', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('userId');",
                "    pm.expect(responseJson).to.have.property('guild_id');",
                "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                "});"
              ],
              "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
            }
          }
        ]
      },
      {
        "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
        "name": "Get VerifyDur by User ID",
        "request": {
          "url": {
            "path": [
              "user",
              "{{test_user_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
            }
          }
        ]
      },
      {
        "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
        "name": "Get VerifyDur by Guild ID",
        "request": {
          "url": {
            "path": [
              "guild",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
            }
          }
        ]
      },
      {
        "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
        "name": "Get VerifyDur by Duration",
        "request": {
          "url": {
            "path": [
              "duration",
              "1h"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response is an array', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.be.an('array');",
                "});"
              ],
              "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
            }
          }
        ]
      },
      {
        "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
        "name": "Check if VerifyDur Expired",
        "request": {
          "url": {
            "path": [
              "expired",
              "{{test_user_id}}",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "56c718e8-8450-4762-8204-f03c05d82b14",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response has expired status', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('expired');",
                "    pm.expect(responseJson.expired).to.be.a('boolean');",
                "});"
              ],
              "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
            }
          }
        ]
      },
      {
        "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
        "name": "Get Remaining Verify Time",
        "request": {
          "url": {
            "path": [
              "remaining",
              "{{test_user_id}}",
              "{{test_guild_id}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('Response has remaining time info', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('remainingTime');",
                "});"
              ],
              "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
            }
          }
        ]
      },
      {
        "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
        "name": "Update VerifyDur",
        "request": {
          "url": {
            "path": [
              "{{verifyDurId}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"duration\":\"3h\"}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('VerifyDur updated successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('duration');",
                "    pm.expect(responseJson.duration).to.eql('3h');",
                "});"
              ],
              "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
            }
          }
        ]
      },
      {
        "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
        "name": "Update User VerifyDur Duration",
        "request": {
          "url": {
            "path": [
              "user",
              "{{test_user_id_2}}",
              "guild",
              "{{test_guild_id_2}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"duration\":\"4h\"}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('User VerifyDur duration updated successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('duration');",
                "    pm.expect(responseJson.duration).to.eql('4h');",
                "});"
              ],
              "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
            }
          }
        ]
      },
      {
        "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
        "name": "Create VerifyDur with Invalid Data",
        "request": {
          "url": {
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 400', function () {",
                "    pm.response.to.have.status(400);",
                "});",
                "",
                "pm.test('Error message is present', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('message');",
                "});"
              ],
              "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
            }
          }
        ]
      },
      {
        "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
        "name": "Delete VerifyDur",
        "request": {
          "url": {
            "path": [
              "{{verifyDurId}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('VerifyDur deleted successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('message');",
                "});"
              ],
              "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
            }
          }
        ]
      },
      {
        "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
        "name": "Delete User VerifyDur",
        "request": {
          "url": {
            "path": [
              "user",
              "{{test_user_id_2}}",
              "guild",
              "{{test_guild_id_2}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "DELETE"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 200', function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test('User VerifyDur deleted successfully', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('message');",
                "});"
              ],
              "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
            }
          }
        ]
      },
      {
        "id": "7908e72f-c405-47cc-9809-5703bb655793",
        "name": "Get Deleted VerifyDur (Should Fail)",
        "request": {
          "url": {
            "path": [
              "{{verifyDurId}}"
            ],
            "host": [
              "{{base_url}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
              "type": "text/javascript",
              "exec": [
                "pm.test('Status code is 404', function () {",
                "    pm.response.to.have.status(404);",
                "});",
                "",
                "pm.test('Error message indicates not found', function () {",
                "    const responseJson = pm.response.json();",
                "    pm.expect(responseJson).to.have.property('message');",
                "});"
              ],
              "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
            }
          }
        ]
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "_postman_id": "verifydur-api-tests",
      "name": "VerifyDur API Tests",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "_": {
      "postman_variable_scope": "environment"
    },
    "id": "verifydur-test-environment",
    "name": "VerifyDur Test Environment",
    "values": [
      {
        "type": "any",
        "value": "http://localhost:3000/api/v1/verifyDur",
        "key": "base_url"
      },
      {
        "type": "any",
        "value": "tu__1756128570019",
        "key": "test_user_id"
      },
      {
        "type": "any",
        "value": "tg__1756128570019",
        "key": "test_guild_id"
      },
      {
        "type": "any",
        "value": "tu2_1756128570020",
        "key": "test_user_id_2"
      },
      {
        "type": "any",
        "value": "tg2_1756128570020",
        "key": "test_guild_id_2"
      },
      {
        "type": "any",
        "value": "",
        "key": "verifyDurId"
      }
    ]
  },
  "globals": {
    "id": "f501684d-bdc4-4c34-b91b-0e124d5e7f9e",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 17,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 17,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 17,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 17,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 17,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 35,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 17,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 221,
      "responseMin": 20,
      "responseMax": 520,
      "responseSd": 197.2078628667493,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1756217341455,
      "completed": 1756217354868
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 17,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a04e0de0-e95d-4abb-b26a-58f3c3fd3668",
          "httpRequestId": "29d67da0-4941-45b4-9726-5e9b5f70e6a6"
        },
        "item": {
          "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
          "name": "Create VerifyDur",
          "request": {
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('VerifyDur created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "    pm.expect(responseJson).to.have.property('TimeStamp');",
                  "    ",
                  "    // Store the created ID for later tests",
                  "    pm.environment.set('verifyDurId', responseJson.id);",
                  "});",
                  "",
                  "pm.test('Default values are correct', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.duration).to.eql('1h');",
                  "});"
                ],
                "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "834c9c82-836d-4ab3-a4e0-aded7f622433",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "77",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"userId\":\"tu__1756128570019\",\"guild_id\":\"tg__1756128570019\",\"duration\":\"1h\"}"
          }
        },
        "response": {
          "id": "c6704055-8714-4770-b9de-535f1bc45177",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:02.180Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:02 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              165,
              217,
              134,
              216,
              180,
              216,
              167,
              216,
              161,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              32,
              105,
              115,
              32,
              101,
              120,
              105,
              115,
              116,
              32,
              105,
              110,
              32,
              117,
              110,
              105,
              113,
              117,
              101,
              32,
              102,
              105,
              101,
              108,
              100,
              115,
              33,
              34,
              44,
              34,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 355,
          "responseSize": 181
        },
        "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "VerifyDur created successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "VerifyDur created successfully",
              "message": "expected { success: true, …(2) } to have property 'id'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:1)"
            }
          },
          {
            "assertion": "Default values are correct",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "Default values are correct",
              "message": "expected undefined to deeply equal '1h'",
              "stack": "AssertionError: expected undefined to deeply equal '1h'\n   at Object.eval sandbox-script.js:3:1)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "06e71990-08d3-4d45-a00d-1d192641ced7",
          "length": 17,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "37a292dd-8447-40c8-be83-727a2152d9de"
        },
        "item": {
          "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
          "name": "Create User VerifyDur",
          "request": {
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('User VerifyDur created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "});"
                ],
                "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "user"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "89e33eec-7faf-455d-9ddf-dec64653317d",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "76",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"userId\":\"tu2_1756128570020\",\"guildId\":\"tg2_1756128570020\",\"duration\":\"2h\"}"
          }
        },
        "response": {
          "id": "039d0a3c-8079-4f7a-919d-8e0fd85f7c02",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:03.083Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:03 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              165,
              217,
              134,
              216,
              180,
              216,
              167,
              216,
              161,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              217,
              132,
              217,
              132,
              217,
              133,
              216,
              179,
              216,
              170,
              216,
              174,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              116,
              104,
              101,
              32,
              100,
              97,
              116,
              97,
              32,
              105,
              115,
              32,
              101,
              120,
              105,
              115,
              116,
              32,
              105,
              110,
              32,
              117,
              110,
              105,
              113,
              117,
              101,
              32,
              102,
              105,
              101,
              108,
              100,
              115,
              33,
              34,
              44,
              34,
              101,
              120,
              105,
              115,
              116,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 277,
          "responseSize": 198
        },
        "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "User VerifyDur created successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "User VerifyDur created successfully",
              "message": "expected { success: true, …(2) } to have property 'id'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:2)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "30cdf305-a315-44d4-997a-bcc663c1520d",
          "length": 17,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "29596036-448d-490d-af2b-ae434f1895aa"
        },
        "item": {
          "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
          "name": "Get All VerifyDur",
          "request": {
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "60b37c58-e82b-4779-ab59-eab593f3d06f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "72090faa-7d6b-494e-98ad-6d189f5f0049",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:03.913Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:03 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              172,
              217,
              133,
              217,
              138,
              216,
              185,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              57,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              50,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              50,
              48,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              50,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              50,
              48,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              51,
              58,
              53,
              54,
              58,
              49,
              48,
              46,
              52,
              51,
              50,
              90,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              50,
              57,
              90,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 50,
          "responseSize": 366
        },
        "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:3)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "fadcd7cf-1f8d-41cd-984d-cdcd4597f075",
          "length": 17,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e57db4c-6b65-4539-b524-b1a61dcd4649"
        },
        "item": {
          "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
          "name": "Get VerifyDur Stats",
          "request": {
            "url": {
              "path": [
                "stats"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats response has required properties', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('totalRecords');",
                  "    pm.expect(responseJson).to.have.property('activeRecords');",
                  "    pm.expect(responseJson).to.have.property('expiredRecords');",
                  "});"
                ],
                "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "stats"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f3f98e88-5fb2-4630-88e4-54bb250f2e65",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "85c4ec0e-1c92-407a-a11f-65ec2cf8d2ba",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:04.526Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:04 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              165,
              216,
              173,
              216,
              181,
              216,
              167,
              216,
              166,
              217,
              138,
              216,
              167,
              216,
              170,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              116,
              111,
              116,
              97,
              108,
              82,
              101,
              99,
              111,
              114,
              100,
              115,
              34,
              58,
              50,
              44,
              34,
              97,
              99,
              116,
              105,
              118,
              101,
              82,
              101,
              99,
              111,
              114,
              100,
              115,
              34,
              58,
              48,
              44,
              34,
              101,
              120,
              112,
              105,
              114,
              101,
              100,
              82,
              101,
              99,
              111,
              114,
              100,
              115,
              34,
              58,
              50,
              44,
              34,
              117,
              110,
              105,
              113,
              117,
              101,
              85,
              115,
              101,
              114,
              115,
              34,
              58,
              50,
              44,
              34,
              117,
              110,
              105,
              113,
              117,
              101,
              71,
              117,
              105,
              108,
              100,
              115,
              34,
              58,
              50,
              44,
              34,
              114,
              101,
              99,
              101,
              110,
              116,
              82,
              101,
              99,
              111,
              114,
              100,
              115,
              34,
              58,
              50,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              68,
              105,
              115,
              116,
              114,
              105,
              98,
              117,
              116,
              105,
              111,
              110,
              34,
              58,
              123,
              34,
              49,
              104,
              34,
              58,
              49,
              44,
              34,
              50,
              104,
              34,
              58,
              49,
              125,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 20,
          "responseSize": 254
        },
        "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Stats response has required properties",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Stats response has required properties",
              "message": "expected { success: true, …(2) } to have property 'totalRecords'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'totalRecords'\n   at Object.eval sandbox-script.js:2:4)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "550ae8a5-8814-4d62-a84a-d824970e5e71",
          "length": 17,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "85040b18-150b-48bc-ad80-07ab0f2f31a9"
        },
        "item": {
          "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
          "name": "Get VerifyDur by ID",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur found successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "});"
                ],
                "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "967a7d17-71d5-4e11-8c7b-013fb45da4a9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f28282f2-4428-4f4f-a2a9-e575489dc16c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:05.098Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:05 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              172,
              217,
              133,
              217,
              138,
              216,
              185,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              52,
              57,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              50,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              50,
              48,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              50,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              50,
              48,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              50,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              51,
              58,
              53,
              54,
              58,
              49,
              48,
              46,
              52,
              51,
              50,
              90,
              34,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              50,
              57,
              90,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 37,
          "responseSize": 366
        },
        "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "VerifyDur found successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "VerifyDur found successfully",
              "message": "expected { success: true, …(2) } to have property 'id'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:5)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "d6833a93-d5ef-4df5-a9a8-c9ad0827259c",
          "length": 17,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6a713a35-baf6-403c-8942-a1cb062e815d"
        },
        "item": {
          "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
          "name": "Get VerifyDur by User and Guild",
          "request": {
            "url": {
              "path": [
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur found for user and guild', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                  "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                  "});"
                ],
                "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "user",
              "tu__1756128570019",
              "guild",
              "tg__1756128570019"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f3e7284a-5352-4887-a14c-2e7f11551cf6",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "389dc000-869e-481e-8b95-2a259b6f9d45",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:05.700Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:06 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              50,
              57,
              90,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 520,
          "responseSize": 224
        },
        "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "VerifyDur found for user and guild",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "VerifyDur found for user and guild",
              "message": "expected { success: true, …(2) } to have property 'userId'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'userId'\n   at Object.eval sandbox-script.js:2:6)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "111ccea3-88e8-4812-a25c-b32face6f8c6",
          "length": 17,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "38e09488-71ab-46e1-a3c7-c585b9facd96"
        },
        "item": {
          "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
          "name": "Get VerifyDur by User ID",
          "request": {
            "url": {
              "path": [
                "user",
                "{{test_user_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "user",
              "tu__1756128570019"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "136b3be9-71a2-4498-b4e5-e61c94fa206b",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "43183ffe-0754-4547-9cd3-e5875c7e044b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:06.810Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:07 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              217,
              132,
              217,
              132,
              217,
              133,
              216,
              179,
              216,
              170,
              216,
              174,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              50,
              57,
              90,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 405,
          "responseSize": 247
        },
        "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:7)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "a7222cec-a6ba-4dee-82f6-20c4498e8571",
          "length": 17,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d487cd4-46a5-47e9-a0bc-19e02ebb4df0"
        },
        "item": {
          "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
          "name": "Get VerifyDur by Guild ID",
          "request": {
            "url": {
              "path": [
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "guild",
              "tg__1756128570019"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "63396801-0ce5-427c-9ef0-5d53a4e43c94",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "3c844063-b499-40f2-b3ee-36c5bb136c06",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:07.791Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:08 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              217,
              132,
              217,
              132,
              216,
              174,
              216,
              167,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              50,
              57,
              90,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 444,
          "responseSize": 243
        },
        "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f323edbc-f7d4-4c06-96d7-cd3fe3e04ef7",
          "length": 17,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dbb1f40a-9c2f-4a9a-b00e-ecd44d79d55e"
        },
        "item": {
          "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
          "name": "Get VerifyDur by Duration",
          "request": {
            "url": {
              "path": [
                "duration",
                "1h"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "duration",
              "1h"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5482f632-f263-4db1-ba91-4a6424169b94",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "a778e353-30c2-4110-82fe-883647b85d9d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:08.786Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:09 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              216,
              168,
              217,
              136,
              216,
              167,
              216,
              179,
              216,
              183,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              50,
              57,
              90,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 452,
          "responseSize": 254
        },
        "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response is an array",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response is an array",
              "message": "expected { success: true, …(2) } to be an array",
              "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:9)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "0f628b53-2594-4d10-9574-bd1c26fc6c9f",
          "length": 17,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d918c98d-7b05-4a5f-aa01-539c16893722"
        },
        "item": {
          "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
          "name": "Check if VerifyDur Expired",
          "request": {
            "url": {
              "path": [
                "expired",
                "{{test_user_id}}",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has expired status', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('expired');",
                  "    pm.expect(responseJson.expired).to.be.a('boolean');",
                  "});"
                ],
                "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "expired",
              "tu__1756128570019",
              "tg__1756128570019"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "486107a5-4f48-446f-b649-5c56e138e6e1",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "0e85cb1f-e394-4fba-b2dc-8a25869326c0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:09.771Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:10 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              217,
              133,
              217,
              134,
              32,
              216,
              167,
              217,
              134,
              216,
              170,
              217,
              135,
              216,
              167,
              216,
              161,
              32,
              216,
              181,
              217,
              132,
              216,
              167,
              216,
              173,
              217,
              138,
              216,
              169,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 472,
          "responseSize": 108
        },
        "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has expired status",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has expired status",
              "message": "expected { success: true, …(1) } to have property 'expired'",
              "stack": "AssertionError: expected { success: true, …(1) } to have property 'expired'\n   at Object.eval sandbox-script.js:2:10)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "e7e3f16c-7f8d-412b-b0d7-bec00e76c1d9",
          "length": 17,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "396fc921-aa7c-4019-8d68-eb2c2b00dab9"
        },
        "item": {
          "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
          "name": "Get Remaining Verify Time",
          "request": {
            "url": {
              "path": [
                "remaining",
                "{{test_user_id}}",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has remaining time info', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('remainingTime');",
                  "});"
                ],
                "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "remaining",
              "tu__1756128570019",
              "tg__1756128570019"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "83624a35-4174-4d90-8542-6308e778d929",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "aa522dfb-2043-4e80-a271-1d260d533380",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:10.800Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:11 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              167,
              217,
              132,
              217,
              136,
              217,
              130,
              216,
              170,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              216,
              170,
              216,
              168,
              217,
              130,
              217,
              138,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 457,
          "responseSize": 90
        },
        "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Response has remaining time info",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Response has remaining time info",
              "message": "expected { success: true, …(1) } to have property 'remainingTime'",
              "stack": "AssertionError: expected { success: true, …(1) } to have property 'remainingTime'\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "b7d6164f-0283-4ed7-a966-2374033d79e1",
          "length": 17,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ba02f665-32cb-4934-b508-26bffe3bbecb"
        },
        "item": {
          "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
          "name": "Update VerifyDur",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"duration\":\"3h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "    pm.expect(responseJson.duration).to.eql('3h');",
                  "});"
                ],
                "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fffed6d3-9707-4857-8266-c4bb4aaf262f",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "17",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"duration\":\"3h\"}"
          }
        },
        "response": {
          "id": "d6ca8477-b619-4703-8aac-5d1b232fd500",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:11.801Z"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2288"
            },
            {
              "key": "ETag",
              "value": "W/\"8f0-XZVm5Q8+ltPUIbpxCrBC+BSbvXE\""
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:11 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              52,
              48,
              52,
              32,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              32,
              45,
              32,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              68,
              117,
              114,
              47,
              34,
              44,
              34,
              115,
              116,
              97,
              99,
              107,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              58,
              32,
              52,
              48,
              52,
              32,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              32,
              45,
              32,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              68,
              117,
              114,
              47,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              111,
              116,
              70,
              111,
              117,
              110,
              100,
              77,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              32,
              40,
              102,
              105,
              108,
              101,
              58,
              47,
              47,
              47,
              67,
              58,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              109,
              111,
              104,
              97,
              109,
              47,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              47,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              47,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              47,
              115,
              114,
              99,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              115,
              47,
              101,
              114,
              114,
              111,
              114,
              115,
              47,
              110,
              111,
              116,
              70,
              111,
              117,
              110,
              100,
              46,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              46,
              106,
              115,
              58,
              53,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              116,
              114,
              105,
              109,
              95,
              112,
              114,
              101,
              102,
              105,
              120,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              50,
              56,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              54,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              54,
              52,
              54,
              58,
              49,
              53,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              54,
              53,
              58,
              49,
              52,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              49,
              55,
              53,
              58,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              114,
              111,
              117,
              116,
              101,
              114,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              52,
              55,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              116,
              114,
              105,
              109,
              95,
              112,
              114,
              101,
              102,
              105,
              120,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              50,
              56,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              54,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              45,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              52,
              56,
              55,
              58,
              55,
              41,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              68,
              117,
              114,
              47,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              80,
              85,
              84,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 34,
          "responseSize": 2288
        },
        "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "VerifyDur updated successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "VerifyDur updated successfully",
              "message": "expected { success: false, error: { …(4) } } to have property 'duration'",
              "stack": "AssertionError: expected { success: false, error: { …(4) } } to have property 'duration'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "5e11b516-bf34-4a72-8e8a-1817ddb22963",
          "length": 17,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2d1e283f-3854-4f06-9204-9d2f824ada58"
        },
        "item": {
          "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
          "name": "Update User VerifyDur Duration",
          "request": {
            "url": {
              "path": [
                "user",
                "{{test_user_id_2}}",
                "guild",
                "{{test_guild_id_2}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"duration\":\"4h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User VerifyDur duration updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "    pm.expect(responseJson.duration).to.eql('4h');",
                  "});"
                ],
                "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "user",
              "tu2_1756128570020",
              "guild",
              "tg2_1756128570020"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d3a07ea1-fdf5-41d6-82a4-54b73b042be0",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "17",
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\"duration\":\"4h\"}"
          }
        },
        "response": {
          "id": "ba703e04-f012-464b-8fd3-43b556b4649b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:12.388Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:12 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              170,
              216,
              173,
              216,
              175,
              217,
              138,
              216,
              171,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              217,
              132,
              217,
              132,
              217,
              133,
              216,
              179,
              216,
              170,
              216,
              174,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              99,
              104,
              97,
              110,
              103,
              101,
              100,
              82,
              111,
              119,
              115,
              34,
              58,
              49,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 94,
          "responseSize": 117
        },
        "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "User VerifyDur duration updated successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "User VerifyDur duration updated successfully",
              "message": "expected { success: true, …(2) } to have property 'duration'",
              "stack": "AssertionError: expected { success: true, …(2) } to have property 'duration'\n   at Object.eval sandbox-script.js:2:13)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "f0826628-8e79-4d53-b02a-0d7bfeb374cc",
          "length": 17,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "24d33cb4-8094-41cd-96c3-f60c72ea6648"
        },
        "item": {
          "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
          "name": "Create VerifyDur with Invalid Data",
          "request": {
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message is present', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "db97f832-4eed-4428-a725-ba6c943b22e4",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": "57",
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
          }
        },
        "response": {
          "id": "4ecbb136-9f9b-4871-95b2-ccbba0660c8f",
          "status": "Bad Request",
          "code": 400,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:13.024Z"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2534"
            },
            {
              "key": "ETag",
              "value": "W/\"9e6-gQsJL2cKNGhIbeto27b3T/3HjVM\""
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:13 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              217,
              133,
              216,
              185,
              216,
              177,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              216,
              179,
              216,
              170,
              216,
              174,
              216,
              175,
              217,
              133,
              32,
              217,
              133,
              216,
              183,
              217,
              132,
              217,
              136,
              216,
              168,
              44,
              32,
              217,
              133,
              216,
              185,
              216,
              177,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              174,
              216,
              167,
              216,
              175,
              217,
              133,
              32,
              217,
              133,
              216,
              183,
              217,
              132,
              217,
              136,
              216,
              168,
              44,
              32,
              216,
              170,
              217,
              134,
              216,
              179,
              217,
              138,
              217,
              130,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              186,
              217,
              138,
              216,
              177,
              32,
              216,
              181,
              216,
              173,
              217,
              138,
              216,
              173,
              32,
              40,
              217,
              133,
              216,
              171,
              216,
              167,
              217,
              132,
              58,
              32,
              49,
              104,
              44,
              32,
              51,
              48,
              109,
              44,
              32,
              50,
              100,
              41,
              34,
              44,
              34,
              115,
              116,
              97,
              99,
              107,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              58,
              32,
              217,
              133,
              216,
              185,
              216,
              177,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              216,
              179,
              216,
              170,
              216,
              174,
              216,
              175,
              217,
              133,
              32,
              217,
              133,
              216,
              183,
              217,
              132,
              217,
              136,
              216,
              168,
              44,
              32,
              217,
              133,
              216,
              185,
              216,
              177,
              217,
              129,
              32,
              216,
              167,
              217,
              132,
              216,
              174,
              216,
              167,
              216,
              175,
              217,
              133,
              32,
              217,
              133,
              216,
              183,
              217,
              132,
              217,
              136,
              216,
              168,
              44,
              32,
              216,
              170,
              217,
              134,
              216,
              179,
              217,
              138,
              217,
              130,
              32,
              216,
              167,
              217,
              132,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              186,
              217,
              138,
              216,
              177,
              32,
              216,
              181,
              216,
              173,
              217,
              138,
              216,
              173,
              32,
              40,
              217,
              133,
              216,
              171,
              216,
              167,
              217,
              132,
              58,
              32,
              49,
              104,
              44,
              32,
              51,
              48,
              109,
              44,
              32,
              50,
              100,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              77,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              32,
              40,
              102,
              105,
              108,
              101,
              58,
              47,
              47,
              47,
              67,
              58,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              109,
              111,
              104,
              97,
              109,
              47,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              47,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              47,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              47,
              115,
              114,
              99,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              115,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              46,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              46,
              106,
              115,
              58,
              52,
              48,
              58,
              50,
              49,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              102,
              105,
              108,
              101,
              58,
              47,
              47,
              47,
              67,
              58,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              109,
              111,
              104,
              97,
              109,
              47,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              47,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              47,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              47,
              115,
              114,
              99,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              115,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              47,
              118,
              97,
              108,
              105,
              100,
              97,
              116,
              105,
              111,
              110,
              46,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              46,
              106,
              115,
              58,
              55,
              49,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              46,
              106,
              115,
              58,
              49,
              52,
              57,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              82,
              111,
              117,
              116,
              101,
              46,
              100,
              105,
              115,
              112,
              97,
              116,
              99,
              104,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              46,
              106,
              115,
              58,
              49,
              49,
              57,
              58,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              52,
              58,
              49,
              53,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              49,
              55,
              53,
              58,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              114,
              111,
              117,
              116,
              101,
              114,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              52,
              55,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              116,
              114,
              105,
              109,
              95,
              112,
              114,
              101,
              102,
              105,
              120,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              50,
              56,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              54,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              68,
              117,
              114,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              80,
              79,
              83,
              84,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 23,
          "responseSize": 2534
        },
        "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
        "assertions": [
          {
            "assertion": "Status code is 400",
            "skipped": false
          },
          {
            "assertion": "Error message is present",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "Error message is present",
              "message": "expected { success: false, error: { …(4) } } to have property 'message'",
              "stack": "AssertionError: expected { success: false, error: { …(4) } } to have property 'message'\n   at Object.eval sandbox-script.js:2:14)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "098e5458-2ab3-4e8c-84b7-8c976a3fda18",
          "length": 17,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d1d52f9d-7964-4a3f-8974-c97aad58908d"
        },
        "item": {
          "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
          "name": "Delete VerifyDur",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur deleted successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f7adaaa5-2258-4ecb-9b2c-a55e7bcd1508",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "82504ecb-d35a-4d24-8425-00d3ec609250",
          "status": "Not Found",
          "code": 404,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:13.623Z"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Content-Length",
              "value": "2291"
            },
            {
              "key": "ETag",
              "value": "W/\"8f3-yT/yYikUBGYFXmCKmR7woIRVBWY\""
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:13 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              44,
              34,
              101,
              114,
              114,
              111,
              114,
              34,
              58,
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              52,
              48,
              52,
              32,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              32,
              45,
              32,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              68,
              117,
              114,
              47,
              34,
              44,
              34,
              115,
              116,
              97,
              99,
              107,
              34,
              58,
              34,
              69,
              114,
              114,
              111,
              114,
              58,
              32,
              52,
              48,
              52,
              32,
              78,
              111,
              116,
              32,
              70,
              111,
              117,
              110,
              100,
              32,
              45,
              32,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              68,
              117,
              114,
              47,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              111,
              116,
              70,
              111,
              117,
              110,
              100,
              77,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              32,
              40,
              102,
              105,
              108,
              101,
              58,
              47,
              47,
              47,
              67,
              58,
              47,
              85,
              115,
              101,
              114,
              115,
              47,
              109,
              111,
              104,
              97,
              109,
              47,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              47,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              47,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              47,
              115,
              114,
              99,
              47,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              115,
              47,
              101,
              114,
              114,
              111,
              114,
              115,
              47,
              110,
              111,
              116,
              70,
              111,
              117,
              110,
              100,
              46,
              109,
              105,
              100,
              100,
              108,
              101,
              119,
              97,
              114,
              101,
              46,
              106,
              115,
              58,
              53,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              116,
              114,
              105,
              109,
              95,
              112,
              114,
              101,
              102,
              105,
              120,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              50,
              56,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              54,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              54,
              52,
              54,
              58,
              49,
              53,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              54,
              53,
              58,
              49,
              52,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              49,
              55,
              53,
              58,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              114,
              111,
              117,
              116,
              101,
              114,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              52,
              55,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              76,
              97,
              121,
              101,
              114,
              46,
              104,
              97,
              110,
              100,
              108,
              101,
              32,
              91,
              97,
              115,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              95,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              93,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              108,
              97,
              121,
              101,
              114,
              46,
              106,
              115,
              58,
              57,
              53,
              58,
              53,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              116,
              114,
              105,
              109,
              95,
              112,
              114,
              101,
              102,
              105,
              120,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              50,
              56,
              58,
              49,
              51,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              54,
              58,
              57,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              70,
              117,
              110,
              99,
              116,
              105,
              111,
              110,
              46,
              112,
              114,
              111,
              99,
              101,
              115,
              115,
              95,
              112,
              97,
              114,
              97,
              109,
              115,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              51,
              52,
              54,
              58,
              49,
              50,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              110,
              101,
              120,
              116,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              92,
              92,
              108,
              105,
              98,
              92,
              92,
              114,
              111,
              117,
              116,
              101,
              114,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              50,
              56,
              48,
              58,
              49,
              48,
              41,
              92,
              110,
              32,
              32,
              32,
              32,
              97,
              116,
              32,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              32,
              40,
              67,
              58,
              92,
              92,
              85,
              115,
              101,
              114,
              115,
              92,
              92,
              109,
              111,
              104,
              97,
              109,
              92,
              92,
              79,
              110,
              101,
              68,
              114,
              105,
              118,
              101,
              92,
              92,
              68,
              101,
              115,
              107,
              116,
              111,
              112,
              92,
              92,
              98,
              97,
              99,
              107,
              101,
              110,
              100,
              80,
              108,
              97,
              116,
              102,
              111,
              114,
              109,
              45,
              109,
              97,
              105,
              110,
              92,
              92,
              110,
              111,
              100,
              101,
              95,
              109,
              111,
              100,
              117,
              108,
              101,
              115,
              92,
              92,
              101,
              120,
              112,
              114,
              101,
              115,
              115,
              45,
              115,
              101,
              115,
              115,
              105,
              111,
              110,
              92,
              92,
              105,
              110,
              100,
              101,
              120,
              46,
              106,
              115,
              58,
              52,
              56,
              55,
              58,
              55,
              41,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              47,
              97,
              112,
              105,
              47,
              118,
              49,
              47,
              118,
              101,
              114,
              105,
              102,
              121,
              68,
              117,
              114,
              47,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              68,
              69,
              76,
              69,
              84,
              69,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 22,
          "responseSize": 2291
        },
        "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 200",
              "message": "expected response to have status code 200 but got 404",
              "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:15)"
            }
          },
          {
            "assertion": "VerifyDur deleted successfully",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "VerifyDur deleted successfully",
              "message": "expected { success: false, error: { …(4) } } to have property 'message'",
              "stack": "AssertionError: expected { success: false, error: { …(4) } } to have property 'message'\n   at Object.eval sandbox-script.js:2:15)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "2638482b-7e13-4b9c-b366-c129ced7d35f",
          "length": 17,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "974b5fe9-ca68-489b-a16d-93eeb3491ca2"
        },
        "item": {
          "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
          "name": "Delete User VerifyDur",
          "request": {
            "url": {
              "path": [
                "user",
                "{{test_user_id_2}}",
                "guild",
                "{{test_guild_id_2}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User VerifyDur deleted successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              "user",
              "tu2_1756128570020",
              "guild",
              "tg2_1756128570020"
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b8d541a5-fdae-498f-a9cf-bbddd0524094",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE"
        },
        "response": {
          "id": "c7e19638-ab52-4fbf-b377-f24297b228cf",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:14.194Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:14 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              173,
              216,
              176,
              217,
              129,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              217,
              132,
              217,
              132,
              217,
              133,
              216,
              179,
              216,
              170,
              216,
              174,
              216,
              175,
              217,
              133,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              123,
              34,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              67,
              111,
              117,
              110,
              116,
              34,
              58,
              49,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 74,
          "responseSize": 121
        },
        "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "User VerifyDur deleted successfully",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2c098f8d-71c6-4e01-b46c-3ac2b0c1b285",
          "length": 17,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e5ba7f6f-e6fb-486c-8097-72b8d7d18e3d"
        },
        "item": {
          "id": "7908e72f-c405-47cc-9809-5703bb655793",
          "name": "Get Deleted VerifyDur (Should Fail)",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message indicates not found', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "3000",
            "path": [
              "api",
              "v1",
              "verifyDur",
              ""
            ],
            "host": [
              "localhost"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.39.1",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "5aa29ed1-a8bb-4ec3-b8f2-17bb268d28b9",
              "system": true
            },
            {
              "key": "Host",
              "value": "localhost:3000",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "55ba2166-2bd8-4950-84f8-b8990e2abd7a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Security-Policy",
              "value": "default-src 'self';script-src 'self' 'unsafe-inline';style-src 'self' 'unsafe-inline';img-src 'self' data:;connect-src 'self';font-src 'self';object-src 'none';frame-src 'none';upgrade-insecure-requests;base-uri 'self';form-action 'self';frame-ancestors 'self';script-src-attr 'none'"
            },
            {
              "key": "Cross-Origin-Embedder-Policy",
              "value": "require-corp"
            },
            {
              "key": "Cross-Origin-Opener-Policy",
              "value": "same-origin"
            },
            {
              "key": "Cross-Origin-Resource-Policy",
              "value": "same-origin"
            },
            {
              "key": "Origin-Agent-Cluster",
              "value": "?1"
            },
            {
              "key": "Referrer-Policy",
              "value": "strict-origin-when-cross-origin"
            },
            {
              "key": "Strict-Transport-Security",
              "value": "max-age=31536000; includeSubDomains; preload"
            },
            {
              "key": "X-Content-Type-Options",
              "value": "nosniff"
            },
            {
              "key": "X-DNS-Prefetch-Control",
              "value": "off"
            },
            {
              "key": "X-Download-Options",
              "value": "noopen"
            },
            {
              "key": "X-Frame-Options",
              "value": "DENY"
            },
            {
              "key": "X-Permitted-Cross-Domain-Policies",
              "value": "none"
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": "*"
            },
            {
              "key": "X-RateLimit-Limit",
              "value": "100"
            },
            {
              "key": "X-RateLimit-Remaining",
              "value": "99"
            },
            {
              "key": "X-RateLimit-Reset",
              "value": "2025-08-26T14:24:14.819Z"
            },
            {
              "key": "Date",
              "value": "Tue, 26 Aug 2025 14:09:14 GMT"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=5"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              34,
              58,
              116,
              114,
              117,
              101,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              216,
              170,
              217,
              133,
              32,
              216,
              167,
              217,
              132,
              216,
              173,
              216,
              181,
              217,
              136,
              217,
              132,
              32,
              216,
              185,
              217,
              132,
              217,
              137,
              32,
              216,
              172,
              217,
              133,
              217,
              138,
              216,
              185,
              32,
              216,
              179,
              216,
              172,
              217,
              132,
              216,
              167,
              216,
              170,
              32,
              217,
              133,
              216,
              175,
              216,
              169,
              32,
              216,
              167,
              217,
              132,
              216,
              170,
              216,
              173,
              217,
              130,
              217,
              130,
              32,
              216,
              168,
              217,
              134,
              216,
              172,
              216,
              167,
              216,
              173,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              49,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              73,
              100,
              34,
              58,
              34,
              116,
              117,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              103,
              117,
              105,
              108,
              100,
              95,
              105,
              100,
              34,
              58,
              34,
              116,
              103,
              95,
              95,
              49,
              55,
              53,
              54,
              49,
              50,
              56,
              53,
              55,
              48,
              48,
              49,
              57,
              34,
              44,
              34,
              100,
              117,
              114,
              97,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              49,
              104,
              34,
              44,
              34,
              84,
              105,
              109,
              101,
              83,
              116,
              97,
              109,
              112,
              34,
              58,
              34,
              50,
              48,
              50,
              53,
              45,
              48,
              56,
              45,
              50,
              54,
              84,
              49,
              49,
              58,
              51,
              48,
              58,
              53,
              54,
              46,
              56,
              50,
              57,
              90,
              34,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 21,
          "responseSize": 239
        },
        "id": "7908e72f-c405-47cc-9809-5703bb655793",
        "assertions": [
          {
            "assertion": "Status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "Status code is 404",
              "message": "expected response to have status code 404 but got 200",
              "stack": "AssertionError: expected response to have status code 404 but got 200\n   at Object.eval sandbox-script.js:1:17)"
            }
          },
          {
            "assertion": "Error message indicates not found",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 10121
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "VerifyDur created successfully",
          "message": "expected { success: true, …(2) } to have property 'id'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:1)",
          "checksum": "5f1cefb355878d68b270df6c7eaa049b",
          "id": "3695c4fc-038c-4dea-9dae-9d1bcb619105",
          "timestamp": 1756217342537,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
          "name": "Create VerifyDur",
          "request": {
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('VerifyDur created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "    pm.expect(responseJson).to.have.property('TimeStamp');",
                  "    ",
                  "    // Store the created ID for later tests",
                  "    pm.environment.set('verifyDurId', responseJson.id);",
                  "});",
                  "",
                  "pm.test('Default values are correct', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.duration).to.eql('1h');",
                  "});"
                ],
                "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 17,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a04e0de0-e95d-4abb-b26a-58f3c3fd3668",
          "httpRequestId": "29d67da0-4941-45b4-9726-5e9b5f70e6a6",
          "scriptId": "b15749c6-6993-41d8-81a4-6ae087407908",
          "execution": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 2,
          "test": "Default values are correct",
          "message": "expected undefined to deeply equal '1h'",
          "stack": "AssertionError: expected undefined to deeply equal '1h'\n   at Object.eval sandbox-script.js:3:1)",
          "checksum": "8d3bf282f3b7d8bee79d3a9a42513235",
          "id": "1c25ce44-dd1f-4365-9acc-c2671779adb6",
          "timestamp": 1756217342538,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 3,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 1,
              "native": false
            }
          ]
        },
        "at": "assertion:2 in test-script",
        "source": {
          "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
          "name": "Create VerifyDur",
          "request": {
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('VerifyDur created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "    pm.expect(responseJson).to.have.property('TimeStamp');",
                  "    ",
                  "    // Store the created ID for later tests",
                  "    pm.environment.set('verifyDurId', responseJson.id);",
                  "});",
                  "",
                  "pm.test('Default values are correct', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson.duration).to.eql('1h');",
                  "});"
                ],
                "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 17,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a04e0de0-e95d-4abb-b26a-58f3c3fd3668",
          "httpRequestId": "29d67da0-4941-45b4-9726-5e9b5f70e6a6",
          "scriptId": "b15749c6-6993-41d8-81a4-6ae087407908",
          "execution": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "User VerifyDur created successfully",
          "message": "expected { success: true, …(2) } to have property 'id'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:2)",
          "checksum": "e20a27dd656e3baac77d527cf8f96a7d",
          "id": "d623f45d-1d0b-471c-966a-b703e141fde9",
          "timestamp": 1756217343376,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 2,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
          "name": "Create User VerifyDur",
          "request": {
            "url": {
              "path": [
                "user"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('User VerifyDur created successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "});"
                ],
                "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "06e71990-08d3-4d45-a00d-1d192641ced7",
          "length": 17,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "37a292dd-8447-40c8-be83-727a2152d9de",
          "scriptId": "3936a8e5-8afa-4f05-a119-701192e79a60",
          "execution": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:3)",
          "checksum": "154beee95d5d2e82d10eecd8eed23587",
          "id": "e9ef3b15-85da-4117-99be-478b80f13d8f",
          "timestamp": 1756217343964,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 3,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
          "name": "Get All VerifyDur",
          "request": {
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "30cdf305-a315-44d4-997a-bcc663c1520d",
          "length": 17,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "29596036-448d-490d-af2b-ae434f1895aa",
          "scriptId": "8e108025-dd42-45f6-a81e-81385e8d91dc",
          "execution": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Stats response has required properties",
          "message": "expected { success: true, …(2) } to have property 'totalRecords'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'totalRecords'\n   at Object.eval sandbox-script.js:2:4)",
          "checksum": "629e63301545a4bd92d1de792f7a2990",
          "id": "067d2b77-befe-4c3d-962a-37fe28e2648c",
          "timestamp": 1756217344560,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 4,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
          "name": "Get VerifyDur Stats",
          "request": {
            "url": {
              "path": [
                "stats"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Stats response has required properties', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('totalRecords');",
                  "    pm.expect(responseJson).to.have.property('activeRecords');",
                  "    pm.expect(responseJson).to.have.property('expiredRecords');",
                  "});"
                ],
                "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "fadcd7cf-1f8d-41cd-984d-cdcd4597f075",
          "length": 17,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1e57db4c-6b65-4539-b524-b1a61dcd4649",
          "scriptId": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
          "execution": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "VerifyDur found successfully",
          "message": "expected { success: true, …(2) } to have property 'id'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'id'\n   at Object.eval sandbox-script.js:2:5)",
          "checksum": "f2ed4e17b1a5792c28c564801f4e153a",
          "id": "e335e2ce-30f2-412e-b27b-641b969126b9",
          "timestamp": 1756217345148,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 5,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
          "name": "Get VerifyDur by ID",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur found successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('id');",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "});"
                ],
                "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "550ae8a5-8814-4d62-a84a-d824970e5e71",
          "length": 17,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "85040b18-150b-48bc-ad80-07ab0f2f31a9",
          "scriptId": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
          "execution": "cd91f95e-2744-4a1f-9227-3411fe71f499"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "VerifyDur found for user and guild",
          "message": "expected { success: true, …(2) } to have property 'userId'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'userId'\n   at Object.eval sandbox-script.js:2:6)",
          "checksum": "f1cc1149b37954c4a7c4a793261078c4",
          "id": "651603cb-9bd3-4403-8a9a-172768ecd7f2",
          "timestamp": 1756217346227,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 6,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
          "name": "Get VerifyDur by User and Guild",
          "request": {
            "url": {
              "path": [
                "user",
                "{{test_user_id}}",
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur found for user and guild', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('userId');",
                  "    pm.expect(responseJson).to.have.property('guild_id');",
                  "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                  "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                  "});"
                ],
                "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "d6833a93-d5ef-4df5-a9a8-c9ad0827259c",
          "length": 17,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6a713a35-baf6-403c-8942-a1cb062e815d",
          "scriptId": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
          "execution": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:7)",
          "checksum": "a43907d35a307e8d2085353d5b7eeb03",
          "id": "48f78086-16e1-486d-aed0-7c319abd5e5c",
          "timestamp": 1756217347224,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 7,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
          "name": "Get VerifyDur by User ID",
          "request": {
            "url": {
              "path": [
                "user",
                "{{test_user_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "111ccea3-88e8-4812-a25c-b32face6f8c6",
          "length": 17,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "38e09488-71ab-46e1-a3c7-c585b9facd96",
          "scriptId": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
          "execution": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:8)",
          "checksum": "00b279d2899a0b08114aab1f5309ebd5",
          "id": "5dd49fb0-0838-430c-850b-ecf6dae43fe7",
          "timestamp": 1756217348251,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 8,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
          "name": "Get VerifyDur by Guild ID",
          "request": {
            "url": {
              "path": [
                "guild",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "a7222cec-a6ba-4dee-82f6-20c4498e8571",
          "length": 17,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8d487cd4-46a5-47e9-a0bc-19e02ebb4df0",
          "scriptId": "9348db4a-a89e-4761-84e1-d5460fd640bc",
          "execution": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response is an array",
          "message": "expected { success: true, …(2) } to be an array",
          "stack": "AssertionError: expected { success: true, …(2) } to be an array\n   at Object.eval sandbox-script.js:2:9)",
          "checksum": "488575e249bc17c45506ff03a98e9d6a",
          "id": "565d3847-774d-45dd-9907-1f4ab1766297",
          "timestamp": 1756217349251,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 9,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
          "name": "Get VerifyDur by Duration",
          "request": {
            "url": {
              "path": [
                "duration",
                "1h"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response is an array', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.be.an('array');",
                  "});"
                ],
                "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f323edbc-f7d4-4c06-96d7-cd3fe3e04ef7",
          "length": 17,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dbb1f40a-9c2f-4a9a-b00e-ecd44d79d55e",
          "scriptId": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
          "execution": "8a5ec519-5e25-454a-8171-65ef3818233c"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response has expired status",
          "message": "expected { success: true, …(1) } to have property 'expired'",
          "stack": "AssertionError: expected { success: true, …(1) } to have property 'expired'\n   at Object.eval sandbox-script.js:2:10)",
          "checksum": "6283c623b44737f3aeb9f1f293d2363c",
          "id": "f878ce97-6a88-49fe-a53a-5d1cd3531d38",
          "timestamp": 1756217350252,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 10,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
          "name": "Check if VerifyDur Expired",
          "request": {
            "url": {
              "path": [
                "expired",
                "{{test_user_id}}",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has expired status', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('expired');",
                  "    pm.expect(responseJson.expired).to.be.a('boolean');",
                  "});"
                ],
                "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "0f628b53-2594-4d10-9574-bd1c26fc6c9f",
          "length": 17,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d918c98d-7b05-4a5f-aa01-539c16893722",
          "scriptId": "56c718e8-8450-4762-8204-f03c05d82b14",
          "execution": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Response has remaining time info",
          "message": "expected { success: true, …(1) } to have property 'remainingTime'",
          "stack": "AssertionError: expected { success: true, …(1) } to have property 'remainingTime'\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "e476b8502863d53f82ae411471e5528c",
          "id": "33c749a6-1d83-4f24-a3f1-fb72968b091b",
          "timestamp": 1756217351262,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
          "name": "Get Remaining Verify Time",
          "request": {
            "url": {
              "path": [
                "remaining",
                "{{test_user_id}}",
                "{{test_guild_id}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has remaining time info', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('remainingTime');",
                  "});"
                ],
                "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "e7e3f16c-7f8d-412b-b0d7-bec00e76c1d9",
          "length": 17,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "396fc921-aa7c-4019-8d68-eb2c2b00dab9",
          "scriptId": "5467284d-0505-4035-b0b0-d5600edeb3e1",
          "execution": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:12)",
          "checksum": "fe679dbbcb9a83bff0671d930ce7572c",
          "id": "a733b852-5ca7-425a-91b1-8ee846e68bf5",
          "timestamp": 1756217351850,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
          "name": "Update VerifyDur",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"duration\":\"3h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "    pm.expect(responseJson.duration).to.eql('3h');",
                  "});"
                ],
                "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b7d6164f-0283-4ed7-a966-2374033d79e1",
          "length": 17,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ba02f665-32cb-4934-b508-26bffe3bbecb",
          "scriptId": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
          "execution": "e6c16799-598a-4c9c-a502-bcde74b7a806"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "VerifyDur updated successfully",
          "message": "expected { success: false, error: { …(4) } } to have property 'duration'",
          "stack": "AssertionError: expected { success: false, error: { …(4) } } to have property 'duration'\n   at Object.eval sandbox-script.js:2:12)",
          "checksum": "0dc0d7a8f5bd7d88d56fb053b16f641d",
          "id": "cbcfa511-559c-487b-aecd-1cee158e920d",
          "timestamp": 1756217351852,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 12,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
          "name": "Update VerifyDur",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"duration\":\"3h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "    pm.expect(responseJson.duration).to.eql('3h');",
                  "});"
                ],
                "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "b7d6164f-0283-4ed7-a966-2374033d79e1",
          "length": 17,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ba02f665-32cb-4934-b508-26bffe3bbecb",
          "scriptId": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
          "execution": "e6c16799-598a-4c9c-a502-bcde74b7a806"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "User VerifyDur duration updated successfully",
          "message": "expected { success: true, …(2) } to have property 'duration'",
          "stack": "AssertionError: expected { success: true, …(2) } to have property 'duration'\n   at Object.eval sandbox-script.js:2:13)",
          "checksum": "e5d090ff3533bd7bc050ceef2cffbe17",
          "id": "3f3d43a0-1711-47a7-939f-633206c67b2d",
          "timestamp": 1756217352490,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 13,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
          "name": "Update User VerifyDur Duration",
          "request": {
            "url": {
              "path": [
                "user",
                "{{test_user_id_2}}",
                "guild",
                "{{test_guild_id_2}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\"duration\":\"4h\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('User VerifyDur duration updated successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('duration');",
                  "    pm.expect(responseJson.duration).to.eql('4h');",
                  "});"
                ],
                "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "5e11b516-bf34-4a72-8e8a-1817ddb22963",
          "length": 17,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2d1e283f-3854-4f06-9204-9d2f824ada58",
          "scriptId": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
          "execution": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "Error message is present",
          "message": "expected { success: false, error: { …(4) } } to have property 'message'",
          "stack": "AssertionError: expected { success: false, error: { …(4) } } to have property 'message'\n   at Object.eval sandbox-script.js:2:14)",
          "checksum": "c6931e02c7c56db22348c4df5d53ea09",
          "id": "73719080-0dd2-47ff-b046-9129348befdb",
          "timestamp": 1756217353069,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 14,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
          "name": "Create VerifyDur with Invalid Data",
          "request": {
            "url": {
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 400', function () {",
                  "    pm.response.to.have.status(400);",
                  "});",
                  "",
                  "pm.test('Error message is present', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "f0826628-8e79-4d53-b02a-0d7bfeb374cc",
          "length": 17,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "24d33cb4-8094-41cd-96c3-f60c72ea6648",
          "scriptId": "3ba83184-6818-4008-9f0b-e4a88abac93c",
          "execution": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 200",
          "message": "expected response to have status code 200 but got 404",
          "stack": "AssertionError: expected response to have status code 200 but got 404\n   at Object.eval sandbox-script.js:1:15)",
          "checksum": "73191a3039f574bba2bfd042dae80039",
          "id": "bc700f72-bb2c-489d-8fa1-f09d3bd0a4c3",
          "timestamp": 1756217353652,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 15,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
          "name": "Delete VerifyDur",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur deleted successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "098e5458-2ab3-4e8c-84b7-8c976a3fda18",
          "length": 17,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d1d52f9d-7964-4a3f-8974-c97aad58908d",
          "scriptId": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
          "execution": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "test": "VerifyDur deleted successfully",
          "message": "expected { success: false, error: { …(4) } } to have property 'message'",
          "stack": "AssertionError: expected { success: false, error: { …(4) } } to have property 'message'\n   at Object.eval sandbox-script.js:2:15)",
          "checksum": "7afd75c4f8fcb85eb5949113cbd5386d",
          "id": "6ed06bd2-99b4-4089-8266-d8a74c415b65",
          "timestamp": 1756217353653,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 15,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
          "name": "Delete VerifyDur",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('VerifyDur deleted successfully', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "098e5458-2ab3-4e8c-84b7-8c976a3fda18",
          "length": 17,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d1d52f9d-7964-4a3f-8974-c97aad58908d",
          "scriptId": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
          "execution": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
        }
      },
      {
        "error": {
          "name": "AssertionError",
          "index": 0,
          "test": "Status code is 404",
          "message": "expected response to have status code 404 but got 200",
          "stack": "AssertionError: expected response to have status code 404 but got 200\n   at Object.eval sandbox-script.js:1:17)",
          "checksum": "2033d2148c0ac6ec2d22998d31980d2a",
          "id": "cad970a2-1286-456e-ab49-32817d1a3936",
          "timestamp": 1756217354854,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 1,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 17,
              "native": false
            }
          ]
        },
        "at": "assertion:0 in test-script",
        "source": {
          "id": "7908e72f-c405-47cc-9809-5703bb655793",
          "name": "Get Deleted VerifyDur (Should Fail)",
          "request": {
            "url": {
              "path": [
                "{{verifyDurId}}"
              ],
              "host": [
                "{{base_url}}"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 404', function () {",
                  "    pm.response.to.have.status(404);",
                  "});",
                  "",
                  "pm.test('Error message indicates not found', function () {",
                  "    const responseJson = pm.response.json();",
                  "    pm.expect(responseJson).to.have.property('message');",
                  "});"
                ],
                "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
              }
            }
          ]
        },
        "parent": {
          "_": {
            "postman_id": "verifydur-api-tests"
          },
          "item": [
            {
              "id": "6e4c82d4-8dda-4f18-bc76-54cb2f02d091",
              "name": "Create VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id}}\",\"guild_id\":\"{{test_guild_id}}\",\"duration\":\"1h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b15749c6-6993-41d8-81a4-6ae087407908",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson).to.have.property('TimeStamp');",
                      "    ",
                      "    // Store the created ID for later tests",
                      "    pm.environment.set('verifyDurId', responseJson.id);",
                      "});",
                      "",
                      "pm.test('Default values are correct', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson.duration).to.eql('1h');",
                      "});"
                    ],
                    "_lastExecutionId": "63bbe39d-1c12-432f-833f-bc50d4f3f831"
                  }
                }
              ]
            },
            {
              "id": "89787ee2-ef63-48a3-a460-218d0f975cc6",
              "name": "Create User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"{{test_user_id_2}}\",\"guildId\":\"{{test_guild_id_2}}\",\"duration\":\"2h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3936a8e5-8afa-4f05-a119-701192e79a60",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 201', function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test('User VerifyDur created successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "});"
                    ],
                    "_lastExecutionId": "4c0bcb2a-858b-4a1c-aebd-b2f13fd92ed9"
                  }
                }
              ]
            },
            {
              "id": "83bd26b2-2b5d-434a-bb54-f30b90547102",
              "name": "Get All VerifyDur",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "8e108025-dd42-45f6-a81e-81385e8d91dc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "b1806129-dba4-46d2-9b4c-2f426b52ae28"
                  }
                }
              ]
            },
            {
              "id": "fcf10eaa-983f-453d-92bd-2f671da18e78",
              "name": "Get VerifyDur Stats",
              "request": {
                "url": {
                  "path": [
                    "stats"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "aae87f20-c4e9-4784-ba46-ea3e7ee8eaa4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Stats response has required properties', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('totalRecords');",
                      "    pm.expect(responseJson).to.have.property('activeRecords');",
                      "    pm.expect(responseJson).to.have.property('expiredRecords');",
                      "});"
                    ],
                    "_lastExecutionId": "cb3ad6c7-79d2-43a9-9a4f-4e4f05ceade6"
                  }
                }
              ]
            },
            {
              "id": "6d894ff0-5353-4f41-9933-a595beba06ef",
              "name": "Get VerifyDur by ID",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15fe5235-cc9e-47e1-8052-ae3018242bb4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('id');",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "});"
                    ],
                    "_lastExecutionId": "cd91f95e-2744-4a1f-9227-3411fe71f499"
                  }
                }
              ]
            },
            {
              "id": "8eb309f0-b3a8-4a04-8e8e-787dd309ad2e",
              "name": "Get VerifyDur by User and Guild",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}",
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "959ed97c-efc9-465a-9ed5-1cf0799be8e6",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur found for user and guild', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('userId');",
                      "    pm.expect(responseJson).to.have.property('guild_id');",
                      "    pm.expect(responseJson.userId).to.eql(pm.environment.get('test_user_id'));",
                      "    pm.expect(responseJson.guild_id).to.eql(pm.environment.get('test_guild_id'));",
                      "});"
                    ],
                    "_lastExecutionId": "a8f684e5-ab6d-4cea-8cf0-d3836f590e81"
                  }
                }
              ]
            },
            {
              "id": "6ec392fc-b5e6-44a1-8253-ca2841c9f911",
              "name": "Get VerifyDur by User ID",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "15728ae8-a35a-4d76-93e5-13f8ffb14e3c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "55b4b0c6-71b9-4baa-ba21-8493f577333c"
                  }
                }
              ]
            },
            {
              "id": "6512098f-a0bb-4d28-9480-26b72822b9ea",
              "name": "Get VerifyDur by Guild ID",
              "request": {
                "url": {
                  "path": [
                    "guild",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9348db4a-a89e-4761-84e1-d5460fd640bc",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "652ae4d3-d4d4-4afb-9b46-a25bfa899566"
                  }
                }
              ]
            },
            {
              "id": "cf3a9899-5c92-4dbe-b9cd-7fb11b0c53c3",
              "name": "Get VerifyDur by Duration",
              "request": {
                "url": {
                  "path": [
                    "duration",
                    "1h"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "92d836a1-8b78-4495-9c4e-e94d79dda4df",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response is an array', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.be.an('array');",
                      "});"
                    ],
                    "_lastExecutionId": "8a5ec519-5e25-454a-8171-65ef3818233c"
                  }
                }
              ]
            },
            {
              "id": "7f133b58-79ce-4ba4-b444-fdb17539a225",
              "name": "Check if VerifyDur Expired",
              "request": {
                "url": {
                  "path": [
                    "expired",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "56c718e8-8450-4762-8204-f03c05d82b14",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has expired status', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('expired');",
                      "    pm.expect(responseJson.expired).to.be.a('boolean');",
                      "});"
                    ],
                    "_lastExecutionId": "1b9ff35b-ab4d-4c7f-a9e7-c591ddf48bde"
                  }
                }
              ]
            },
            {
              "id": "88767a6e-7046-4fee-bc7a-5616ac852885",
              "name": "Get Remaining Verify Time",
              "request": {
                "url": {
                  "path": [
                    "remaining",
                    "{{test_user_id}}",
                    "{{test_guild_id}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5467284d-0505-4035-b0b0-d5600edeb3e1",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('Response has remaining time info', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('remainingTime');",
                      "});"
                    ],
                    "_lastExecutionId": "36ad71a4-8ecd-472b-b640-90fa7d5e6832"
                  }
                }
              ]
            },
            {
              "id": "a0368ea4-d9b0-4605-b95d-3c393ef4cfa7",
              "name": "Update VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"3h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "28a1e4a6-b26a-46fe-9f21-74bac0cfa30e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('3h');",
                      "});"
                    ],
                    "_lastExecutionId": "e6c16799-598a-4c9c-a502-bcde74b7a806"
                  }
                }
              ]
            },
            {
              "id": "7ec63b62-0cac-4c8f-ae7a-ca894ff154f1",
              "name": "Update User VerifyDur Duration",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "PUT",
                "body": {
                  "mode": "raw",
                  "raw": "{\"duration\":\"4h\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "a222c99b-7905-4894-b984-ba4fbd22ad3d",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur duration updated successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('duration');",
                      "    pm.expect(responseJson.duration).to.eql('4h');",
                      "});"
                    ],
                    "_lastExecutionId": "2796b486-fa64-44b0-a7bd-3cb6413dfc19"
                  }
                }
              ]
            },
            {
              "id": "b899d1ee-2c1a-492c-8b56-272d698239a2",
              "name": "Create VerifyDur with Invalid Data",
              "request": {
                "url": {
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\"userId\":\"\",\"guild_id\":\"\",\"duration\":\"invalid_duration\"}"
                }
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "3ba83184-6818-4008-9f0b-e4a88abac93c",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 400', function () {",
                      "    pm.response.to.have.status(400);",
                      "});",
                      "",
                      "pm.test('Error message is present', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "523d3c65-e8f5-44e6-bcd5-adbf0993a592"
                  }
                }
              ]
            },
            {
              "id": "14e587ad-c957-4ce0-88a6-197c14a74b02",
              "name": "Delete VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "5a289f3c-1bc3-4475-b73b-e82b432dafab",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "41253bac-0e88-4486-a704-3c84c1d0dfe9"
                  }
                }
              ]
            },
            {
              "id": "3099da1a-3ee4-4447-8d46-96e8ae8339a9",
              "name": "Delete User VerifyDur",
              "request": {
                "url": {
                  "path": [
                    "user",
                    "{{test_user_id_2}}",
                    "guild",
                    "{{test_guild_id_2}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "DELETE"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30427b7c-c930-432c-8610-1a1a327a72e4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 200', function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test('User VerifyDur deleted successfully', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "9a216afb-534e-43da-b0e5-a1c7cc442b79"
                  }
                }
              ]
            },
            {
              "id": "7908e72f-c405-47cc-9809-5703bb655793",
              "name": "Get Deleted VerifyDur (Should Fail)",
              "request": {
                "url": {
                  "path": [
                    "{{verifyDurId}}"
                  ],
                  "host": [
                    "{{base_url}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET"
              },
              "response": [],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test('Status code is 404', function () {",
                      "    pm.response.to.have.status(404);",
                      "});",
                      "",
                      "pm.test('Error message indicates not found', function () {",
                      "    const responseJson = pm.response.json();",
                      "    pm.expect(responseJson).to.have.property('message');",
                      "});"
                    ],
                    "_lastExecutionId": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
                  }
                }
              ]
            }
          ],
          "event": [],
          "variable": [],
          "info": {
            "_postman_id": "verifydur-api-tests",
            "name": "VerifyDur API Tests",
            "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
            "description": {
              "content": "اختبارات شاملة لواجهة برمجة تطبيقات مدة التحقق",
              "type": "text/plain"
            }
          }
        },
        "cursor": {
          "ref": "2c098f8d-71c6-4e01-b46c-3ac2b0c1b285",
          "length": 17,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e5ba7f6f-e6fb-486c-8097-72b8d7d18e3d",
          "scriptId": "1ed4a96c-0837-47a4-9825-e134dfa0b9de",
          "execution": "8b4d7428-ee94-44a7-941a-e428c4c1ab85"
        }
      }
    ],
    "error": null
  }
}