// ุชุญููู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ุฃููุงู
import '../../../../config/index.js';

import Redis from 'ioredis';
import { redis } from '../../../../config/database.config.js';

/**
 * ุงุฎุชุจุงุฑ ุชุดุฎูุตู ูููู ูุดููุฉ Redis
 */
async function diagnosticTest() {
  console.log('๐ ุจุฏุก ุงูุงุฎุชุจุงุฑ ุงูุชุดุฎูุตู ูู Redis');
  console.log('=' .repeat(50));
  
  // ุทุจุงุนุฉ ุฅุนุฏุงุฏุงุช Redis
  console.log('๐ ุฅุนุฏุงุฏุงุช Redis:');
  console.log(`Host: ${redis.host}`);
  console.log(`Port: ${redis.port}`);
  console.log(`Password: ${redis.password ? '***' : 'ูุง ููุฌุฏ'}`);
  console.log(`Database: ${redis.db}`);
  console.log('');
  
  let client;
  
  try {
    console.log('๐ ุฅูุดุงุก ุงุชุตุงู ูุงุญุฏ ุจุณูุท...');
    client = new Redis({
      host: redis.host,
      port: redis.port,
      password: redis.password,
      db: redis.db,
      lazyConnect: true,
      connectTimeout: 5000,
      commandTimeout: 5000,
      maxRetriesPerRequest: 1
    });
    
    console.log('๐ ุงุฎุชุจุงุฑ ping...');
    const pingResult = await client.ping();
    console.log(`โ Ping ูุฌุญ: ${pingResult}`);
    
    console.log('๐ ุงุฎุชุจุงุฑ SET...');
    await client.set('diagnostic_test', 'success');
    console.log('โ SET ูุฌุญ');
    
    console.log('๐ ุงุฎุชุจุงุฑ GET...');
    const value = await client.get('diagnostic_test');
    console.log(`โ GET ูุฌุญ: ${value}`);
    
    console.log('๐งน ุชูุธูู...');
    await client.del('diagnostic_test');
    console.log('โ ุชู ุงูุชูุธูู');
    
    console.log('');
    console.log('๐ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช!');
    console.log('โ Redis ูุนูู ุจุดูู ุตุญูุญ');
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ:', error.message);
    console.error('๐ ุชูุงุตูู ุงูุฎุทุฃ:', error.stack);
  } finally {
    if (client) {
      try {
        console.log('๐ ุฅุบูุงู ุงูุงุชุตุงู...');
        await client.quit();
        console.log('โ ุชู ุฅุบูุงู ุงูุงุชุตุงู');
      } catch (error) {
        console.error('โ ุฎุทุฃ ูู ุฅุบูุงู ุงูุงุชุตุงู:', error.message);
      }
    }
  }
  
  console.log('๐ ุงูุชูู ุงูุงุฎุชุจุงุฑ ุงูุชุดุฎูุตู');
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
diagnosticTest();